[{"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js":"1","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js":"2","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js":"3","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js":"4","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js":"5","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js":"6","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js":"7","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js":"8","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js":"9","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js":"10","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js":"11","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js":"12","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js":"13","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js":"14","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js":"15","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js":"16","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js":"17","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js":"18","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js":"19","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Phase.js":"20","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js":"21","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js":"22","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js":"23","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js":"24","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Bars.js":"25","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js":"26","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js":"27","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js":"28","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js":"29","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js":"30","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js":"31","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js":"32","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\windeoResize.js":"33","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\SpotlightCheck.js":"34","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\WebcamCapture.js":"35"},{"size":207,"mtime":1608038562091,"results":"36","hashOfConfig":"37"},{"size":1764,"mtime":1608215391152,"results":"38","hashOfConfig":"37"},{"size":397,"mtime":1607981746162,"results":"39","hashOfConfig":"37"},{"size":2188,"mtime":1608289045731,"results":"40","hashOfConfig":"37"},{"size":251,"mtime":1607981746163,"results":"41","hashOfConfig":"37"},{"size":2980,"mtime":1613830905191,"results":"42","hashOfConfig":"37"},{"size":2921,"mtime":1607981746146,"results":"43","hashOfConfig":"37"},{"size":1031,"mtime":1613653885306,"results":"44","hashOfConfig":"37"},{"size":506,"mtime":1607981746148,"results":"45","hashOfConfig":"37"},{"size":1997,"mtime":1608215391155,"results":"46","hashOfConfig":"37"},{"size":1104,"mtime":1608215391156,"results":"47","hashOfConfig":"37"},{"size":667,"mtime":1607981746149,"results":"48","hashOfConfig":"37"},{"size":1268,"mtime":1613555587334,"results":"49","hashOfConfig":"37"},{"size":357,"mtime":1607981746133,"results":"50","hashOfConfig":"37"},{"size":806,"mtime":1610032615533,"results":"51","hashOfConfig":"37"},{"size":250,"mtime":1613397183793,"results":"52","hashOfConfig":"37"},{"size":1497,"mtime":1613397183774,"results":"53","hashOfConfig":"37"},{"size":1758,"mtime":1610274131878,"results":"54","hashOfConfig":"37"},{"size":1877,"mtime":1610274131879,"results":"55","hashOfConfig":"37"},{"size":1104,"mtime":1613727084817,"results":"56","hashOfConfig":"37"},{"size":247,"mtime":1608215391159,"results":"57","hashOfConfig":"37"},{"size":1684,"mtime":1610032615535,"results":"58","hashOfConfig":"37"},{"size":4597,"mtime":1613399292457,"results":"59","hashOfConfig":"37"},{"size":5365,"mtime":1613831566315,"results":"60","hashOfConfig":"37"},{"size":6608,"mtime":1613400799049,"results":"61","hashOfConfig":"37"},{"size":88,"mtime":1608145598785,"results":"62","hashOfConfig":"37"},{"size":86,"mtime":1608145598786,"results":"63","hashOfConfig":"37"},{"size":959,"mtime":1613555321805,"results":"64","hashOfConfig":"37"},{"size":1050,"mtime":1610032615543,"results":"65","hashOfConfig":"37"},{"size":397,"mtime":1607981746158,"results":"66","hashOfConfig":"37"},{"size":1204,"mtime":1608215391159,"results":"67","hashOfConfig":"37"},{"size":622,"mtime":1610032615542,"results":"68","hashOfConfig":"37"},{"size":617,"mtime":1609004489040,"results":"69","hashOfConfig":"37"},{"size":3685,"mtime":1613726949415,"results":"70","hashOfConfig":"37"},{"size":2845,"mtime":1613831556106,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1k5eq83",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js",[],["154","155"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js",["156"],"import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\nimport { httpPath } from \"../utils/ClientUtils\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  ADMIN_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\n//Load Admin\r\nexport const loadAdmin = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    console.log(\"1\");\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: ADMIN_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// actions/auth.js must have same name as reducers/auth.js\r\n//Register Admin\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/admin\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err;\r\n\r\n    if (errors) {\r\n      // errors.foreach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n//Login Admin\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT Admin\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n//StartGame\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js",["157","158"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js",["159"],"import React, { View } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport managerIcon from \"../../assets/managar2.png\";\r\nimport playerIcon from \"../../assets/player.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"../layouts/css/Landing.css\";\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <div>\r\n      <Typography variant=\"h2\" style={{ textAlign: \"center\" }}>\r\n        Welcome to LCE\r\n      </Typography>\r\n    </div>\r\n\r\n    <div className=\"flex-container-main\">\r\n      <Link className=\"left-side\" to=\"/loginAdmin\">\r\n        <img\r\n          alt=\"mangerIcon\"\r\n          src={managerIcon}\r\n          width=\"350px\"\r\n          height=\"400px\"\r\n          className=\"avatar\"\r\n        />\r\n      </Link>\r\n      <Link className=\"right-side\" to=\"/loginUser\">\r\n        {/* <Typography className='right-side' variant='h5'>\r\n          User\r\n        </Typography> */}\r\n        <img alt=\"playerIcon\" src={playerIcon} width=\"350px\" height=\"400px\" />\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js",["160","161"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Phase from \"./Phase\";\r\nimport \"../layouts/css/Game.css\";\r\nimport scoreLogo from \"../../assets/bottomBar/score.svg\";\r\nimport playerNumLogo from \"../../assets/bottomBar/playerNum.svg\";\r\nimport groupLogo from \"../../assets/bottomBar/group.svg\";\r\n\r\n// import { Question } from \"./Question\";\r\n// document.body.style.backgroundColor = \"#2d4059\";\r\n\r\nconst Game = ({ score, name, group }) => {\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Phase/>\r\n      </div>\r\n\r\n      <div className=\"bottomBar\">\r\n        <h1 className=\"text\">{group}</h1>\r\n        <img className=\"group\" src={groupLogo} />\r\n        <h1 className=\"text\">{name}</h1>\r\n        <img className=\"icon\" src={playerNumLogo} />\r\n        <h1 className=\"text\">{score}</h1>\r\n        <img className=\"icon\" src={scoreLogo} alt=\"scoreLogo\" />\r\n      </div>\r\n\r\n    </Fragment>\r\n    \r\n  );\r\n};\r\nGame.propTypes = {\r\n  score: PropTypes.number,\r\n  name: PropTypes.string,\r\n  group: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  score: state.user.userState.score,\r\n  name: state.user.name,\r\n  group: state.user.group,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Game);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js",["162","163"],"import { KEYGAME_SUCCESS, KEYGAME_FAIL, CHANGE_SCREEN } from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Login User\r\nexport const login = ({ name, keygame }) => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: \"REQ_USER_LOGIN\",\r\n          name: name,\r\n          keygame: keygame,\r\n        })\r\n      );\r\n    };\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      console.log(\"got reply! \", dataFromServer);\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    // const errors = err.response.data.errors;\r\n    // if (errors) {\r\n    //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    // }\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//TODO MIGHT NEED =>async dispatch\r\nexport const UserAnswer = (answerNum, time) => async () => {\r\n  client.send(\r\n    JSON.stringify({\r\n      type: \"USER_ANSWER\",\r\n      answer: answerNum,\r\n      time: time,\r\n    })\r\n  );\r\n};\r\n\r\nexport const videoEnd = () => async () => {\r\n  client.send(\r\n    JSON.stringify({\r\n      type: \"VIDEO_END\",\r\n    })\r\n  );\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js",["164"],"import {\r\n  KEYGAME_SUCCESS,\r\n  KEYGAME_FAIL,\r\n  PHASE,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n} from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Start Game Admin\r\nexport const startGame = () => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: CREATE_NEW_GAME_INSTANCE,\r\n        })\r\n      );\r\n    };\r\n    // get The Game Properties\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const ChangePhase = (phaseName = \"\") => async (dispatch) => {\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: PHASE, //TODO::need to write func in server.\r\n        phaseName: phaseName,\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const resumePause = (resumeOrPause) => async (dispatch) => {\r\n  console.log(resumeOrPause);\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: resumeOrPause, //TODO::need to write func in server.\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Phase.js",["165","166","167"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport Question from \"./Question\";\r\nimport Bars from \"./Bars\";\r\nimport { Answer } from \"./Answer\";\r\nimport Video from \"./Video\";\r\nimport Top3 from \"./Top3\";\r\nimport { Poll } from \"./Poll\";\r\nimport WebcamCapture from \"./WebcamCapture\";\r\n//import EdenTesting from \"./EdenTesting\";\r\n\r\nconst Phase = ({ phase }) => {\r\n  switch (phase) {\r\n    case \"Question\":\r\n      return <Question />;\r\n    case \"answer\":\r\n      return <Answer />;\r\n    case \"video\":\r\n      return <Video />;\r\n    case \"poll\":\r\n      return <Poll />;\r\n    case \"top3\":\r\n      return <Top3 />;\r\n    case \"bars\":\r\n      return <Bars />;\r\n    default:\r\n      return <WebcamCapture/>\r\n    // return <h1>Defult Screen</h1>;\r\n    // return <EdenTesting />;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nPhase.propTypes = {\r\n  phase: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  phase: state.user.userState.phase,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Phase);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js",["168","169","170"],"import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UserAnswer } from \"../../actions/user\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport \"../layouts/css/Question.css\";\r\nconst Question = ({ question, answers, time, UserAnswer }) => {\r\n  var t0 = performance.now();\r\n  const indexes = [];\r\n  let tmp = 0;\r\n  for (let index = 0; index < answers.length; index++) {\r\n    tmp = index + 1;\r\n    indexes[index] = tmp + \"\";\r\n  }\r\n  const [isDisabled, setDisable] = useState(false);\r\n  const onAnswerClick = (num) => {\r\n    var t1 = performance.now();\r\n    setDisable(true);\r\n    UserAnswer(num, Math.round(t1 - t0));\r\n  };\r\n\r\n  const handleKeyDown = React.useCallback((key) => {\r\n    var t1 = performance.now();\r\n    setDisable(true);\r\n    UserAnswer(parseInt(key), Math.round(t1 - t0));\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='col-centered'>\r\n        <CountdownCircleTimer\r\n          size={300}\r\n          isPlaying\r\n          duration={time}\r\n          colors={[\r\n            [\"#004777\", 0.33],\r\n            [\"#F7B801\", 0.33],\r\n            [\"#A30000\", 0.33],\r\n          ]}\r\n        >\r\n          {({ remainingTime }) => remainingTime}\r\n        </CountdownCircleTimer>\r\n      </div>\r\n      <div className='col-centered'>\r\n        <Typography variant='h2'>{question}</Typography>\r\n      </div>\r\n      <div className='answers'>\r\n        {answers.map((ans, index) => (\r\n          <Button\r\n            className={index % 2 == 0 ? \"left-sideBut\" : \"right-sideBut\"}\r\n            key={index + 1}\r\n            variant='contained'\r\n            color='primary'\r\n            style={{ margin: 5 }}\r\n            disabled={isDisabled}\r\n            onClick={(e) => onAnswerClick(index + 1)}\r\n          >\r\n            {ans}\r\n          </Button>\r\n        ))}\r\n        <KeyboardEventHandler\r\n          handleKeys={indexes}\r\n          onKeyEvent={(key, e) => handleKeyDown(key)}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  //   return (\r\n  //     <Fragment>\r\n  //       <div className=\"col-centered\">\r\n  //         <Button\r\n  //           fullWidth=\"true\"\r\n  //           size=\"large\"\r\n  //           href=\"#text-buttons\"\r\n  //           variant=\"contained\"\r\n  //           color=\"secondary\"\r\n  //         >\r\n  //           {qu}\r\n  //         </Button>\r\n  //       </div>\r\n  //       <div>\r\n  //         <p className=\"left-side\">\r\n  //           <Button\r\n  //             fullWidth=\"true\"\r\n  //             variant=\"contained\"\r\n  //             color=\"primary\"\r\n  //             value=\"1\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans1}\r\n  //           </Button>\r\n  //         </p>\r\n  //         <p className=\"right-side\">\r\n  //           <Button\r\n  //             fullWidth=\"true\"\r\n  //             variant=\"contained\"\r\n  //             color=\"primary\"\r\n  //             value=\"2\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans2}\r\n  //           </Button>\r\n  //         </p>\r\n  //       </div>\r\n  //       <div>\r\n  //         <p className=\"left-side\">\r\n  //           <Button\r\n  //             variant=\"contained\"\r\n  //             fullWidth=\"true\"\r\n  //             color=\"primary\"\r\n  //             value=\"3\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans3}\r\n  //           </Button>\r\n  //         </p>\r\n  //         <p className=\"right-side\">\r\n  //           <Button\r\n  //             fullWidth=\"true\"\r\n  //             variant=\"contained\"\r\n  //             color=\"primary\"\r\n  //             value=\"4\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans4}\r\n  //           </Button>\r\n  //         </p>\r\n  //       </div>\r\n  //       <audio autoPlay>\r\n  //         <source src=\"https://www.dropbox.com/s/z8qky594e03dyzm/file_example_MP3_700KB.mp3?raw=1\" />\r\n  //       </audio>\r\n  //     </Fragment>\r\n  //   );\r\n};\r\n\r\nQuestion.propTypes = {\r\n  question: PropTypes.string.isRequired,\r\n  answers: PropTypes.array,\r\n  time: PropTypes.number,\r\n  UserAnswer: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  question: state.user.userState.phaseProp.question,\r\n  answers: state.user.userState.phaseProp.answers,\r\n  time: state.user.userState.phaseProp.time,\r\n});\r\nexport default connect(mapStateToProps, { UserAnswer })(Question);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js",["171","172","173"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Bars.js",["174","175","176","177","178","179"],"import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport correctSvg from \"../../assets/success-green-check-mark.svg\";\r\nimport incorrectSvg from \"../../assets/wrong.svg\";\r\nimport \"chartjs-plugin-datalabels\";\r\nimport \"chartjs-plugin-labels\";\r\nimport \"../layouts/css/BarsAnimation.css\";\r\nconst Bars = ({\r\n  distribution,\r\n  correctAnswer,\r\n  answers,\r\n  userAnswer,\r\n  audioUrl,\r\n}) => {\r\n  let sentence;\r\n  // let icon;\r\n  if (correctAnswer == userAnswer) {\r\n    sentence = \"Well Done! Your answer is correct! \";\r\n    // icon = CorrectnessIcon(true);\r\n  } else {\r\n    sentence = \"Unfortunately, Your answer is not the right answer.. \";\r\n    // icon = CorrectnessIcon(false);\r\n  }\r\n  let distributionPercent = castToPercent(distribution);\r\n  let imagesByResult = imagesSetter(answers, correctAnswer, userAnswer);\r\n  let colorSet = [\r\n    \"#0ead69\",\r\n    \"#fdbd27\",\r\n    \"#ea3546\",\r\n    \"#2599e7\",\r\n    \"#d4d5fd\",\r\n    \"#f86624\",\r\n  ];\r\n  const data = {\r\n    labels: answers,\r\n    datasets: [\r\n      {\r\n        backgroundColor: colorSet,\r\n        borderColor: colorSet,\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: Object.values(distributionPercent),\r\n        datalabels: {\r\n          anchor: \"end\",\r\n          align: \"start\",\r\n          offset: 20,\r\n          backgroundColor: function (ctx) {\r\n            // var value = ctx.dataset.data[ctx.dataIndex];\r\n            // return value > 50 ? \"white\" : null;\r\n            return null;\r\n          },\r\n          borderColor: function (ctx) {\r\n            // var value = ctx.dataset.data[ctx.dataIndex];\r\n            // return value > 0 ? \"white\" : null;\r\n            // return \"white\";\r\n            return null;\r\n          },\r\n          // borderWidth: 2,\r\n          // borderRadius: 4,\r\n          font: {\r\n            weight: \"bold\",\r\n            size: 40,\r\n          },\r\n          color: function (ctx) {\r\n            var value = ctx.dataset.data[ctx.dataIndex];\r\n            return value > 0 ? \"white\" : null;\r\n            // return \"white\";\r\n          },\r\n          formatter: function (value, ctx) {\r\n            if (!ctx.active) {\r\n              return value + \"%\";\r\n            } else if (ctx.dataIndex == correctAnswer - 1) {\r\n              return \"Correct\";\r\n            } else if (ctx.dataIndex == userAnswer - 1) {\r\n              return \"Yours\";\r\n            } else {\r\n              return value + \"%\";\r\n            }\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className='flex-container'>\r\n      <Typography variant='h5' font='Montserrat'>\r\n        {sentence}\r\n        {/* {icon} */}\r\n      </Typography>\r\n      <audio autoPlay>\r\n        <source src={audioUrl} />\r\n      </audio>\r\n      <div className='bottom-bars'>\r\n        <Bar\r\n          data={data}\r\n          options={{\r\n            layout: {\r\n              padding: {\r\n                top: 40,\r\n              },\r\n              margin: {\r\n                bottom: 20,\r\n              },\r\n            },\r\n            animation: {\r\n              duration: 2300,\r\n            },\r\n            legend: {\r\n              display: false,\r\n            },\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              labels: {\r\n                render: \"image\",\r\n                textMargin: 10,\r\n                images: imagesByResult,\r\n              },\r\n              datalabels: {\r\n                labels: {\r\n                  color: \"blue\",\r\n                  labels: {\r\n                    title: {\r\n                      font: {\r\n                        weight: \"bold\",\r\n                        size: 100,\r\n                      },\r\n                    },\r\n                    value: {\r\n                      color: \"green\",\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  display: true,\r\n                  ticks: {\r\n                    fontSize: 30,\r\n                  },\r\n                  gridLines: {\r\n                    paddingTop: 10,\r\n                    drawBorder: true,\r\n                    color: \"black\",\r\n                    drawOnChartArea: false,\r\n                    drawTicks: false,\r\n                  },\r\n                },\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  ticks: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction CorrectnessIcon(result) {\r\n  if (result) {\r\n    return <img width={30} height={30} src={correctSvg} />;\r\n  } else {\r\n    return <img width={30} height={30} src={incorrectSvg} />;\r\n  }\r\n}\r\nfunction imagesSetter(answers, correctAnswer, userAnswer) {\r\n  let imagesByResult = [];\r\n  for (let index = 0; index < answers.length; index++) {\r\n    if (index + 1 === userAnswer || index + 1 === correctAnswer) {\r\n      if (userAnswer === index + 1) {\r\n        imagesByResult[index] = {\r\n          //Wrong Answer\r\n          src: incorrectSvg,\r\n          width: 30,\r\n          height: 30,\r\n        };\r\n      }\r\n      if (correctAnswer === index + 1) {\r\n        imagesByResult[index] = {\r\n          //Correct Answer\r\n          src: correctSvg,\r\n          width: 30,\r\n          height: 30,\r\n        };\r\n      }\r\n    } else {\r\n      imagesByResult[index] = null;\r\n    }\r\n  }\r\n  return imagesByResult;\r\n}\r\nBars.propTypes = {\r\n  distribution: PropTypes.object.isRequired,\r\n  correctAnswer: PropTypes.number.isRequired,\r\n  userAnswer: PropTypes.number.isRequired,\r\n  answers: PropTypes.array.isRequired,\r\n  audioUrl: PropTypes.string.isRequired,\r\n};\r\nfunction castToPercent(distribution) {\r\n  let total = 0;\r\n  Object.values(distribution).forEach((element) => {\r\n    total += element;\r\n  });\r\n\r\n  let distributionPercent = {};\r\n  Object.keys(distribution).forEach((element) => {\r\n    distributionPercent[element] = Math.round(\r\n      (100 * distribution[element]) / total\r\n    );\r\n  });\r\n  return distributionPercent;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  distribution: state.user.userState.phaseProp.distribution,\r\n  correctAnswer: state.user.userState.phaseProp.correctAnswer,\r\n  userAnswer: state.user.userState.phaseProp.userAnswer,\r\n  answers: state.user.userState.phaseProp.answers,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Bars);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js",["180"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Player from \"@vimeo/player\";\r\nimport Vimeo from \"@u-wave/react-vimeo\";\r\nimport useWindowDimensions from \"./windeoResize\";\r\nimport { videoEnd } from \"../../actions/user\";\r\nimport \"../layouts/css/Video.css\";\r\n\r\nconst Video = ({ videoUrl, videoEnd }) => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const onVideoEnd = () => videoEnd();\r\n\r\n  return (\r\n    <div className=\"video\">\r\n      <Vimeo\r\n        video={videoUrl}\r\n        controls={false}\r\n        height={height - 80}\r\n        width={width}\r\n        autoplay\r\n        onEnd={onVideoEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nVideo.prototype = {\r\n  videoUrl: PropTypes.string,\r\n  videoEnd: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  videoUrl: state.user.userState.phaseProp.videoUrl,\r\n});\r\nexport default connect(mapStateToProps, { videoEnd })(Video);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js",["181"],"import {\r\n  CHANGE_SCREEN,\r\n  KEYGAME_FAIL,\r\n  GAME_KEY_SUCCESS,\r\n  SERVER_FEEDBACK_TO_ANSWER,\r\n  PHASE,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  name: \"\",\r\n  isAuthenticated: false,\r\n  userState: {},\r\n  // score: \"0\",\r\n  group: \"\",\r\n};\r\n//func name Changed from login to userReducer\r\nexport default function userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  console.log(payload);\r\n  switch (type) {\r\n    case GAME_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        name: payload.name,\r\n        group: payload.group,\r\n        isAuthenticated: true,\r\n        userState: payload,\r\n      };\r\n    case KEYGAME_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case PHASE:\r\n      return {\r\n        ...state,\r\n        userState: payload,\r\n        //TODO:: change the screen state to name of the screen and not bool\r\n      };\r\n    case SERVER_FEEDBACK_TO_ANSWER:\r\n      return {\r\n        score: payload.score,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js",["182","183"],"import {\r\n  START_GAME,\r\n  GAME_PROP,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n  USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  phaseList: [],\r\n  Gamekey: \"000\",\r\n  usersData: {},\r\n};\r\n\r\nexport default function dashBoardReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_NEW_GAME_INSTANCE:\r\n      return {\r\n        ...state,\r\n        phaseList: payload.phaseList,\r\n        GameKey: payload.keyGame,\r\n      };\r\n    case USER:\r\n      return {\r\n        ...state,\r\n        usersData: payload.usersData,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\windeoResize.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\SpotlightCheck.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\WebcamCapture.js",["184","185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":21},{"ruleId":"191","severity":1,"message":"196","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":12},{"ruleId":"191","severity":1,"message":"197","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":21},{"ruleId":"198","severity":1,"message":"199","line":22,"column":9,"nodeType":"200","endLine":22,"endColumn":50},{"ruleId":"198","severity":1,"message":"199","line":24,"column":9,"nodeType":"200","endLine":24,"endColumn":53},{"ruleId":"191","severity":1,"message":"201","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"202","line":1,"column":41,"nodeType":"193","messageId":"194","endLine":1,"endColumn":54},{"ruleId":"191","severity":1,"message":"201","line":2,"column":3,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"191","severity":1,"message":"203","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"204","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":15},{"ruleId":"205","severity":1,"message":"206","line":33,"column":3,"nodeType":"207","messageId":"208","endLine":33,"endColumn":22},{"ruleId":"191","severity":1,"message":"203","line":3,"column":17,"nodeType":"193","messageId":"194","endLine":3,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":25,"column":25,"nodeType":"211","endLine":25,"endColumn":42},{"ruleId":"212","severity":1,"message":"213","line":53,"column":34,"nodeType":"214","messageId":"215","endLine":53,"endColumn":36},{"ruleId":"191","severity":1,"message":"216","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":35},{"ruleId":"191","severity":1,"message":"217","line":1,"column":37,"nodeType":"193","messageId":"194","endLine":1,"endColumn":46},{"ruleId":"191","severity":1,"message":"218","line":10,"column":8,"nodeType":"193","messageId":"194","endLine":10,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":20,"column":21,"nodeType":"214","messageId":"215","endLine":20,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":74,"column":38,"nodeType":"214","messageId":"215","endLine":74,"endColumn":40},{"ruleId":"212","severity":1,"message":"213","line":76,"column":38,"nodeType":"214","messageId":"215","endLine":76,"endColumn":40},{"ruleId":"191","severity":1,"message":"219","line":171,"column":10,"nodeType":"193","messageId":"194","endLine":171,"endColumn":25},{"ruleId":"198","severity":1,"message":"199","line":173,"column":12,"nodeType":"200","endLine":173,"endColumn":59},{"ruleId":"198","severity":1,"message":"199","line":175,"column":12,"nodeType":"200","endLine":175,"endColumn":61},{"ruleId":"191","severity":1,"message":"220","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":14},{"ruleId":"191","severity":1,"message":"202","line":2,"column":3,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"191","severity":1,"message":"221","line":2,"column":3,"nodeType":"193","messageId":"194","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"222","line":3,"column":3,"nodeType":"193","messageId":"194","endLine":3,"endColumn":12},{"ruleId":"191","severity":1,"message":"223","line":2,"column":17,"nodeType":"193","messageId":"194","endLine":2,"endColumn":26},{"ruleId":"191","severity":1,"message":"216","line":2,"column":28,"nodeType":"193","messageId":"194","endLine":2,"endColumn":36},{"ruleId":"191","severity":1,"message":"217","line":2,"column":38,"nodeType":"193","messageId":"194","endLine":2,"endColumn":47},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'httpPath' is defined but never used.","Identifier","unusedVar","'DialogTitle' is defined but never used.","'Game' is defined but never used.","'View' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'KEYGAME_SUCCESS' is defined but never used.","'CHANGE_SCREEN' is defined but never used.","'Fragment' is defined but never used.","'login' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'Confetti' is defined but never used.","'CorrectnessIcon' is defined but never used.","'Player' is defined but never used.","'START_GAME' is defined but never used.","'GAME_PROP' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]