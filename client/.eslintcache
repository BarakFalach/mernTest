[{"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\index.js":"1","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\App.js":"2","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js":"3","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\layouts\\landing.js":"4","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginUser.js":"5"},{"size":207,"mtime":1607330182065,"results":"6","hashOfConfig":"7"},{"size":823,"mtime":1607689555159,"results":"8","hashOfConfig":"7"},{"size":3092,"mtime":1607689849639,"results":"9","hashOfConfig":"7"},{"size":900,"mtime":1607689555168,"results":"10","hashOfConfig":"7"},{"size":225,"mtime":1607689555166,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"edq6ir",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\index.js",[],["24","25"],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\App.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js",["26","27","28","29","30","31"],"import React, {Fragment, useState} from 'react'\r\nimport DribbleButton from 'react-dribble-button';\r\n\r\n\r\n\r\nconst LoginAdmin = () => {\r\n\r\n    const [formData, setDataForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    }) \r\n\r\n    const {email, password} = formData;\r\n\r\n    const onChange = e => setDataForm({...formData, [e.target.name]: e.target.value});\r\n    const onLogin = e => {\r\n        e.preventDefault();  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n        <html lang=\"en\">\r\n        <head>\r\n            <meta charset=\"UTF-8\" />\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n            <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n            <link\r\n            href=\"https://fonts.googleapis.com/css?family=Raleway\"\r\n            rel=\"stylesheet\"\r\n            />\r\n            <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\"\r\n            integrity=\"sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n\r\n            <link rel=\"stylesheet\" href=\"css/style.css\" />\r\n            <title>Welcome To The Developer Connector</title>\r\n        </head>\r\n        <body>\r\n            <section class=\"container\">\r\n            <h1 class=\"large text-primary\" class=\"col-centered\">\r\n                Sign In\r\n            </h1>\r\n                <div class=\"form-group\" class=\"col-centered\">\r\n                    <input \r\n                        className=\"formField\"\r\n                        type=\"text\"\r\n                        placeholder=\"Email Adress\"\r\n                        name=\"email\" \r\n                        value={email}\r\n                        onChange = {e => onChange(e)}\r\n                        required/>\r\n                </div>\r\n\r\n                <div class=\"form-group\" class=\"col-centered\" >\r\n                    <input\r\n                        className=\"formField\"\r\n                        type=\"password\"\r\n                        placeholder=\"* Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange = {e => onChange(e)}\r\n                        required />\r\n                </div>\r\n                \r\n                <div className=\"sign In\" className=\"col-centered\">\r\n                    <DribbleButton className=\"AnimateButton\" color=\"deep-orange\" onClick={\"TODO\"} animationDuration={1000} >\r\n                      <div className=\"LogInText\">\r\n                          התחבר\r\n                        </div>   \r\n                    </DribbleButton>\r\n                </div>\r\n\r\n                <div class=\"sign Up\" class=\"col-centered\">\r\n                <DribbleButton className=\"AnimateButton\" color=\"yellow\" onClick={\"TODO\"} animationDuration={1000} >\r\n                         הרשם\r\n                    </DribbleButton>\r\n                </div>\r\n\r\n                \r\n            </section>\r\n        </body>\r\n        </html>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\nexport default LoginAdmin\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\layouts\\landing.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginUser.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":16,"column":11,"nodeType":"38","messageId":"39","endLine":16,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":44,"column":44,"nodeType":"42","endLine":44,"endColumn":64},{"ruleId":"40","severity":1,"message":"41","line":47,"column":41,"nodeType":"42","endLine":47,"endColumn":61},{"ruleId":"40","severity":1,"message":"41","line":58,"column":41,"nodeType":"42","endLine":58,"endColumn":61},{"ruleId":"40","severity":1,"message":"41","line":69,"column":42,"nodeType":"42","endLine":69,"endColumn":66},{"ruleId":"40","severity":1,"message":"41","line":77,"column":38,"nodeType":"42","endLine":77,"endColumn":58},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'onLogin' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]