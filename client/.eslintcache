[{"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js":"1","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js":"2","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js":"3","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js":"4","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js":"5","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js":"6","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js":"7","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js":"8","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js":"9","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js":"10","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js":"11","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js":"12","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js":"13","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js":"14","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js":"15","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js":"16","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js":"17","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js":"18","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Phase.js":"19","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js":"20","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js":"21","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js":"22","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js":"23","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js":"24","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js":"25","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js":"26","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\WebcamCapture.js":"27","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js":"28","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js":"29","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js":"30","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js":"31","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Bars.js":"32","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js":"33","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\SpotlightCheck.js":"34","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\windeoResize.js":"35"},{"size":207,"mtime":1608038562091,"results":"36","hashOfConfig":"37"},{"size":1764,"mtime":1613842473067,"results":"38","hashOfConfig":"37"},{"size":397,"mtime":1607981746162,"results":"39","hashOfConfig":"37"},{"size":2188,"mtime":1608289045731,"results":"40","hashOfConfig":"37"},{"size":251,"mtime":1607981746163,"results":"41","hashOfConfig":"37"},{"size":2980,"mtime":1613830905191,"results":"42","hashOfConfig":"37"},{"size":506,"mtime":1607981746148,"results":"43","hashOfConfig":"37"},{"size":1031,"mtime":1613653885306,"results":"44","hashOfConfig":"37"},{"size":1104,"mtime":1608215391156,"results":"45","hashOfConfig":"37"},{"size":667,"mtime":1607981746149,"results":"46","hashOfConfig":"37"},{"size":1997,"mtime":1608215391155,"results":"47","hashOfConfig":"37"},{"size":2921,"mtime":1607981746146,"results":"48","hashOfConfig":"37"},{"size":1268,"mtime":1613842473075,"results":"49","hashOfConfig":"37"},{"size":250,"mtime":1613397183793,"results":"50","hashOfConfig":"37"},{"size":357,"mtime":1607981746133,"results":"51","hashOfConfig":"37"},{"size":806,"mtime":1610032615533,"results":"52","hashOfConfig":"37"},{"size":1758,"mtime":1610274131878,"results":"53","hashOfConfig":"37"},{"size":1877,"mtime":1610274131879,"results":"54","hashOfConfig":"37"},{"size":1062,"mtime":1613842868036,"results":"55","hashOfConfig":"37"},{"size":1547,"mtime":1613842473069,"results":"56","hashOfConfig":"37"},{"size":247,"mtime":1608215391159,"results":"57","hashOfConfig":"37"},{"size":1810,"mtime":1613842473071,"results":"58","hashOfConfig":"37"},{"size":397,"mtime":1607981746158,"results":"59","hashOfConfig":"37"},{"size":622,"mtime":1610032615542,"results":"60","hashOfConfig":"37"},{"size":1050,"mtime":1610032615543,"results":"61","hashOfConfig":"37"},{"size":1204,"mtime":1608215391159,"results":"62","hashOfConfig":"37"},{"size":2845,"mtime":1613842895414,"results":"63","hashOfConfig":"37"},{"size":5365,"mtime":1613831566315,"results":"64","hashOfConfig":"37"},{"size":959,"mtime":1613555321805,"results":"65","hashOfConfig":"37"},{"size":86,"mtime":1608145598786,"results":"66","hashOfConfig":"37"},{"size":88,"mtime":1608145598785,"results":"67","hashOfConfig":"37"},{"size":6859,"mtime":1613842473073,"results":"68","hashOfConfig":"37"},{"size":8011,"mtime":1613842473077,"results":"69","hashOfConfig":"37"},{"size":3685,"mtime":1613726949415,"results":"70","hashOfConfig":"37"},{"size":617,"mtime":1609004489040,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1k5eq83",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js",[],["157","158"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js",["159"],"import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\nimport { httpPath } from \"../utils/ClientUtils\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  ADMIN_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\n//Load Admin\r\nexport const loadAdmin = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    console.log(\"1\");\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: ADMIN_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// actions/auth.js must have same name as reducers/auth.js\r\n//Register Admin\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/admin\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err;\r\n\r\n    if (errors) {\r\n      // errors.foreach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n//Login Admin\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT Admin\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n//StartGame\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js",["160","161"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport { DialogTitle, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport Game from \"../game/Game\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"../layouts/css/LoginUser.css\";\r\n\r\n\r\nconst LoginUser = ({ login, isAuthenticated, questions }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    keygame: \"\",\r\n  });\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"key game is \" + keygame);\r\n    login({ name, keygame });\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/game' />;\r\n  }\r\n\r\n  const { name, keygame } = formData;\r\n  return (\r\n    <Fragment>\r\n        <div className='flex-container-user-main '>\r\n\r\n        <Typography variant='h2'>ברוכים הבאים </Typography>\r\n        <Typography style ={{marginTop:\"25px\"}} variant='h8'>בשלב הראשון, אנא מלאו את שמכם המלא ואת קוד המשחק הניתן לכם על ידי המנחה </Typography>\r\n        \r\n        <div className=\"flex-container-row\">\r\n          <div className=\"flex-container-user-form\">\r\n\r\n              <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                  <div className='flex-container-user-col'>\r\n                    <TextField\r\n                      className='formField'\r\n                      type='text'\r\n                      placeholder='שם מלא'\r\n                      name='name'\r\n                      value={name}\r\n                      onChange={(e) => onChange(e)}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                <div className='flex-container-user-col'>\r\n                  <TextField\r\n                    className='formField'\r\n                    type='number'\r\n                    placeholder='קוד משחק'\r\n                    name='keygame'\r\n                    textAlign='middle'\r\n                    value={keygame}\r\n                    onChange={(e) => onChange(e)}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Button id=\"testbutton\" type='submit' className='flex-container-user-col' color='primary'>\r\n                    היכנס/י\r\n                  </Button>\r\n                </div>\r\n                \r\n              </form>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLoginUser.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  questions: PropTypes.array,\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  questions: state.user.questions,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginUser);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js",["162"],"import React, { View } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport managerIcon from \"../../assets/managar2.png\";\r\nimport playerIcon from \"../../assets/player.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"../layouts/css/Landing.css\";\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <div>\r\n      <Typography variant=\"h2\" style={{ textAlign: \"center\" }}>\r\n        Welcome to LCE\r\n      </Typography>\r\n    </div>\r\n\r\n    <div className=\"flex-container-main\">\r\n      <Link className=\"left-side\" to=\"/loginAdmin\">\r\n        <img\r\n          alt=\"mangerIcon\"\r\n          src={managerIcon}\r\n          width=\"350px\"\r\n          height=\"400px\"\r\n          className=\"avatar\"\r\n        />\r\n      </Link>\r\n      <Link className=\"right-side\" to=\"/loginUser\">\r\n        {/* <Typography className='right-side' variant='h5'>\r\n          User\r\n        </Typography> */}\r\n        <img alt=\"playerIcon\" src={playerIcon} width=\"350px\" height=\"400px\" />\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js",["163","164"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Phase from \"./Phase\";\r\nimport \"../layouts/css/Game.css\";\r\nimport scoreLogo from \"../../assets/bottomBar/score.svg\";\r\nimport playerNumLogo from \"../../assets/bottomBar/playerNum.svg\";\r\nimport groupLogo from \"../../assets/bottomBar/group.svg\";\r\n\r\n// import { Question } from \"./Question\";\r\n// document.body.style.backgroundColor = \"#2d4059\";\r\n\r\nconst Game = ({ score, name, group }) => {\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Phase/>\r\n      </div>\r\n\r\n      <div className=\"bottomBar\">\r\n        <h1 className=\"text\">{group}</h1>\r\n        <img className=\"group\" src={groupLogo} />\r\n        <h1 className=\"text\">{name}</h1>\r\n        <img className=\"icon\" src={playerNumLogo} />\r\n        <h1 className=\"text\">{score}</h1>\r\n        <img className=\"icon\" src={scoreLogo} alt=\"scoreLogo\" />\r\n      </div>\r\n\r\n    </Fragment>\r\n    \r\n  );\r\n};\r\nGame.propTypes = {\r\n  score: PropTypes.number,\r\n  name: PropTypes.number,\r\n  group: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  score: state.user.userState.score,\r\n  name: state.user.name,\r\n  group: state.user.group,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Game);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js",["165"],"import {\r\n  KEYGAME_SUCCESS,\r\n  KEYGAME_FAIL,\r\n  PHASE,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n} from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Start Game Admin\r\nexport const startGame = () => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: CREATE_NEW_GAME_INSTANCE,\r\n        })\r\n      );\r\n    };\r\n    // get The Game Properties\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const ChangePhase = (phaseName = \"\") => async (dispatch) => {\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: PHASE, //TODO::need to write func in server.\r\n        phaseName: phaseName,\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const resumePause = (resumeOrPause) => async (dispatch) => {\r\n  console.log(resumeOrPause);\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: resumeOrPause, //TODO::need to write func in server.\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Phase.js",["166","167","168"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport Question from \"./Question\";\r\nimport Bars from \"./Bars\";\r\nimport { Answer } from \"./Answer\";\r\nimport Video from \"./Video\";\r\nimport Top3 from \"./Top3\";\r\nimport { Poll } from \"./Poll\";\r\nimport WebcamCapture from \"./WebcamCapture\";\r\n\r\n\r\nconst Phase = ({ phase }) => {\r\n  switch (phase) {\r\n    case \"Question\":\r\n      return <Question />;\r\n    case \"answer\":\r\n      return <Answer />;\r\n    case \"video\":\r\n      return <Video />;\r\n    case \"poll\":\r\n      return <Poll />;\r\n    case \"top3\":\r\n      return <Top3 />;\r\n    case \"bars\":\r\n      return <Bars />;\r\n    default:\r\n      return <WebcamCapture/>\r\n    // return <h1>Defult Screen</h1>;\r\n    // return <EdenTesting />;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nPhase.propTypes = {\r\n  phase: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  phase: state.user.userState.phase,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Phase);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js",["169","170"],"import { KEYGAME_SUCCESS, KEYGAME_FAIL, CHANGE_SCREEN } from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Login User\r\nexport const login = ({ name, keygame }) => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: \"REQ_USER_LOGIN\",\r\n          name: name,\r\n          keygame: keygame,\r\n        })\r\n      );\r\n    };\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      console.log(\"got reply! \", dataFromServer);\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    // const errors = err.response.data.errors;\r\n    // if (errors) {\r\n    //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    // }\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//TODO MIGHT NEED =>async dispatch\r\nexport const UserAnswer = (answerNum, time) => async () => {\r\n  console.log(\"ua \" + answerNum + \" t \" + time);\r\n  client.send(\r\n    JSON.stringify({\r\n      type: \"USER_ANSWER\",\r\n      answer: answerNum,\r\n      time: time,\r\n    })\r\n  );\r\n};\r\n\r\nexport const videoEnd = () => async () => {\r\n  client.send(\r\n    JSON.stringify({\r\n      type: \"VIDEO_END\",\r\n    })\r\n  );\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js",["171","172"],"import {\r\n  START_GAME,\r\n  GAME_PROP,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n  USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  phaseList: [],\r\n  Gamekey: \"000\",\r\n  usersData: {},\r\n};\r\n\r\nexport default function dashBoardReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_NEW_GAME_INSTANCE:\r\n      return {\r\n        ...state,\r\n        phaseList: payload.phaseList,\r\n        GameKey: payload.keyGame,\r\n      };\r\n    case USER:\r\n      return {\r\n        ...state,\r\n        usersData: payload.usersData,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js",["173"],"import {\r\n  CHANGE_SCREEN,\r\n  KEYGAME_FAIL,\r\n  GAME_KEY_SUCCESS,\r\n  SERVER_FEEDBACK_TO_ANSWER,\r\n  PHASE,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  name: \"\",\r\n  isAuthenticated: false,\r\n  userState: {},\r\n  // score: \"0\",\r\n  group: \"\",\r\n};\r\n//func name Changed from login to userReducer\r\nexport default function userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  console.log(payload);\r\n  switch (type) {\r\n    case GAME_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        name: payload.name,\r\n        group: payload.group,\r\n        isAuthenticated: true,\r\n        userState: payload,\r\n      };\r\n    case KEYGAME_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case PHASE:\r\n      return {\r\n        ...state,\r\n        userState: payload,\r\n        //TODO:: change the screen state to name of the screen and not bool\r\n      };\r\n    case SERVER_FEEDBACK_TO_ANSWER:\r\n      return {\r\n        score: payload.score,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\WebcamCapture.js",["174","175","176"],"import Webcam from 'react-webcam';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\nimport ScreenshotAudio from \"../../assets/Screenshot.mp3\"\r\n\r\nimport \"../layouts/css/WebcamCapture.css\";\r\n\r\nclass WebcamCapture extends React.Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t  webcamRef: null,\r\n\t\t  ShowText: false,\r\n\t\t  Seconds: 1,\r\n\t\t  \r\n\t\t  ImgExist: false,\r\n\t\t  CaptureImage: null,\r\n\t\t  \r\n\t\t  audio: false,\r\n\t\t};\r\n\t\tthis.start = this.start.bind(this);\r\n\t}  \r\n\r\n\tstart() {\r\n\t\tthis.setStatePromise({ImgExist: false, ShowText: true, Seconds: 3, audio: false})\r\n\t\t  .then(() => this.sleep(1100))\r\n\t\t  .then(() => this.setStatePromise({Seconds: 2}))\r\n\t\t  .then(() => this.sleep(1000)) \r\n\t\t  .then(() => this.setStatePromise({Seconds: 1}))\r\n\t\t  .then(() => this.sleep(1000))\r\n\t\t  .then(() => this.setStatePromise({ShowText: false, audio: true}))\r\n\t\t  .then(() => this.sleep(500))\r\n\t\t  .then(() => this.setStatePromise({ImgExist: true ,CaptureImage: this.webcamRef.getScreenshot()}))\r\n\t}\r\n\t\r\n\tsleep(ms) {\r\n\treturn new Promise(resolve => setTimeout(resolve, ms));\r\n\t}\r\n\t\r\n\tsetStatePromise(state) {\r\n\tthis.setState(state);\r\n\treturn Promise.resolve();\r\n\t}\r\n\r\n\tsetRef = webcam => {\r\n\t\tthis.webcamRef = webcam;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.audio && (<audio autoPlay><source type=\"audio/mp3\" src={ScreenshotAudio} /></audio>)}\r\n\t\t\t\t{!this.state.ImgExist && <div className=\"mark\"/>}\r\n\t\t\t\t<div className=\"flex-container-webcam-main\">\r\n\t\t\t\t\t<div className=\"flex-container-webcam-col\">\t\t\t\t\t\r\n\t\t\t\t\t\t<Typography variant='h2'>צילום תמונת משתתף</Typography>\r\n\t\t\t\t\t\t<Typography variant='h9' style={{marginTop: 5}}>אנא נסו למקם את הפנים במרכז האזור המסומן בעיגול</Typography>\r\n\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t<div className=\"item\">\r\n\t\t\t\t\t\t\t{this.state.ImgExist?  \r\n\t\t\t\t\t\t\t\t<ReactRoundedImage className=\"img\" image={this.state.CaptureImage} roundedSize=\"1\" imageWidth=\"350\" imageHeight=\"350\" />:\r\n\t\t\t\t\t\t\t\t<Webcam ref={this.setRef} height=\"350\" screenshotFormat='image/jpeg' />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"item\">\r\n\t\t\t\t\t\t\t<button className=\"myButton\" disabled={this.state.ShowText} onClick={this.start}>{this.state.ImgExist? \"צלמ/י שוב\": \"צלמ/י תמונה\"}</button>\r\n\t\t\t\t\t\t\t{this.state.ImgExist && <button className=\"myButton\" onClick={this.start}>אשר/י תמונה</button>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.state.ShowText && <div className=\"counter-text\">{this.state.Seconds}</div>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  });\r\n  \r\nexport default connect(mapStateToProps, {})(WebcamCapture);\r\n\r\n// https://www.npmjs.com/package/react-webcam\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js",["177","178","179"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport StarShape from \"../../assets/winner_Shape.svg\";\r\nimport IconPerson from \"../../assets/person.jpg\";\r\nimport PlayerReal from \"../../assets/player1.jpg\";\r\nimport Applause from \"../../assets/Applause.mp3\";\r\nimport Crown from \"../../assets/crown.svg\";\r\nimport SpotlightCheck from \"./SpotlightCheck\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\nimport Confetti from \"react-confetti\";\r\n\r\nimport \"../layouts/css/Top3.css\";\r\n\r\n\r\nclass Top3 extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      place: 4,\r\n      third: false,\r\n      second: false,\r\n      first: false,\r\n      winner: false,\r\n      audio3: \"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\",\r\n      audio2: \"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\",\r\n      audio1: \"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\",\r\n    };\r\n  }  \r\n\r\n  componentDidMount() {\r\n   this.start();\r\n  }\r\n\r\n  start() {\r\n    this.setStatePromise({third: false})\r\n      .then(() => this.sleep(2000))\r\n      .then(() => this.setStatePromise({third: true, place: 3 }))\r\n      .then(() => this.sleep(4500)) \r\n      .then(() => this.setStatePromise({third: false, second: true, place: 2}))\r\n      .then(() => this.sleep(4000))\r\n      .then(() => this.setStatePromise({ second: false, first: true, place: 1}))\r\n      .then(() => this.sleep(2100))\r\n      .then(() => this.setStatePromise({ first: true, winner: true}))\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  setStatePromise(state) {\r\n    this.setState(state);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  userExists = (place) => {\r\n    if(this.props.users.length<place)\r\n      return false;\r\n    return true;\r\n  }\r\n  \r\n  userName = (place) => {\r\n    if(this.props.users.length<place)\r\n      return \".\";\r\n    return this.props.users[place-1].user_name;\r\n  };\r\n\r\n  userScore = (place) => {\r\n    if(this.props.users.length<place)\r\n      return \".\";\r\n    return this.props.users[place-1].curr_score;\r\n  };\r\n\r\n  userPic = (place) => {\r\n    if(this.props.users.length<place || this.state.place>place) \r\n      return IconPerson;\r\n    // return this.props.users[place-1].curr_pic\r\n    return PlayerReal;\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <Fragment> \r\n        <div>\r\n          <SpotlightCheck /> \r\n          {this.state.third && (<audio autoPlay><source src={this.state.audio3}/></audio>)}\r\n          {this.state.second && (<audio autoPlay><source src={this.state.audio2}/></audio>)}\r\n          {this.state.first && (<audio autoPlay><source src={this.state.audio1}/></audio>)}\r\n          {this.state.winner && (<audio autoPlay><source type=\"audio/mp3\" src={Applause} /></audio>)}\r\n\r\n        </div>\r\n        {/* Users */}\r\n        <div className=\"flex-container-main\">\r\n            {/* Third (3) Place */}\r\n            <div className=\"flex-container-col playr-third\">\r\n              <div className=\"empty-rec\"/>\r\n              <div className=\"item-not-flex\">\r\n                <div class=\"ellipse\">{this.state.place<=3? this.userName(3): \"#\"}</div>\r\n                {/* <img alt=\"playerIcon\" src={this.userPic(3)} width=\"145px\"/> */}\r\n                <ReactRoundedImage image={this.userPic(3)} roundedSize=\"0\" imageWidth=\"140\" imageHeight=\"140\" />\r\n              </div>\r\n\r\n              <div className=\"score-text inline-block\">{this.state.place<=3? this.userScore(3): \"#\"}</div> \r\n              <img alt=\"icon place 3\" src={StarShape} width=\"130px\"/>\r\n            </div> \r\n\r\n            {/* First (1) Place */}\r\n            <div className=\"flex-container-col playr-first\">\r\n              <div className=\"empty-rec1\"/>\r\n              <img alt=\"playerIcon\" src={Crown} width=\"90px\" style={{transform: \"rotate(10deg)\"}}/>\r\n              <div className=\"item-not-flex\">\r\n                <div class=\"ellipse\">{this.state.place<=1? this.userName(1): \"#\"}</div>\r\n                {/* <img alt=\"playerIcon\" src={this.userPic(1)} width=\"145px\"/> */}\r\n                <ReactRoundedImage image={this.userPic(1)} roundedSize=\"0\" imageWidth=\"140\" imageHeight=\"140\" />\r\n\r\n              </div>\r\n              <div className=\"score-text\">{this.state.place<=1? this.userScore(1): \"#\"}</div> \r\n              <img alt=\"icon place 1\" src={StarShape} width=\"180px\"/>     \r\n              <div className=\"empty-rec\"/>\r\n            </div> \r\n\r\n            {/* Second Place */}\r\n            <div className=\"flex-container-col playr-second\">\r\n              <div className=\"empty-rec\"/>\r\n              <div className=\"item-not-flex\">\r\n                <div class=\"ellipse\">{this.state.place<=2? this.userName(2): \"#\"}</div>\r\n                {/* <img alt=\"playerIcon\" src={this.userPic(2)} width=\"145px\"/> */}\r\n                <ReactRoundedImage image={this.userPic(2)} roundedSize=\"0\" imageWidth=\"140\" imageHeight=\"140\" />\r\n              </div>\r\n              <div className=\"score-text\">{this.state.place<=2? this.userScore(2): \"#\"}</div> \r\n              <img alt=\"icon place 2\" src={StarShape} width=\"130px\"/>\r\n            </div> \r\n        </div>\r\n      </Fragment>\r\n    )\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.user.userState.phaseProp.users,\r\n  audio: state.user.userState.phaseProp.audio,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Top3);","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js",["180"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Player from \"@vimeo/player\";\r\nimport Vimeo from \"@u-wave/react-vimeo\";\r\nimport useWindowDimensions from \"./windeoResize\";\r\nimport { videoEnd } from \"../../actions/user\";\r\nimport \"../layouts/css/Video.css\";\r\n\r\nconst Video = ({ videoUrl, videoEnd }) => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const onVideoEnd = () => videoEnd();\r\n\r\n  return (\r\n    <div className=\"video\">\r\n      <Vimeo\r\n        video={videoUrl}\r\n        controls={false}\r\n        height={height - 80}\r\n        width={width}\r\n        autoplay\r\n        onEnd={onVideoEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nVideo.prototype = {\r\n  videoUrl: PropTypes.string,\r\n  videoEnd: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  videoUrl: state.user.userState.phaseProp.videoUrl,\r\n});\r\nexport default connect(mapStateToProps, { videoEnd })(Video);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Bars.js",["181","182","183","184","185","186"],"import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport correctSvg from \"../../assets/success-green-check-mark.svg\";\r\nimport incorrectSvg from \"../../assets/wrong.svg\";\r\nimport \"chartjs-plugin-datalabels\";\r\nimport \"chartjs-plugin-labels\";\r\nimport \"../layouts/css/BarsAnimation.css\";\r\n// import  aud from \"../../assets/beep.mp3\"\r\nconst Bars = ({\r\n  distribution,\r\n  correctAnswer,\r\n  answers,\r\n  userAnswer,\r\n  audioUrl,\r\n}) => {\r\n  let sentence;\r\n  // let icon;\r\n  if (correctAnswer == userAnswer) {\r\n    sentence = \"Well Done! Your answer is correct! \";\r\n    // icon = CorrectnessIcon(true);\r\n  } else {\r\n    sentence = \"Unfortunately, Your answer is not the right answer.. \";\r\n    // icon = CorrectnessIcon(false);\r\n  }\r\n  let distributionPercent = castToPercent(distribution);\r\n  let imagesByResult = imagesSetter(answers, correctAnswer, userAnswer);\r\n  let colorSet = [\r\n    \"#0ead69\",\r\n    \"#fdbd27\",\r\n    \"#ea3546\",\r\n    \"#2599e7\",\r\n    \"#d4d5fd\",\r\n    \"#f86624\",\r\n  ];\r\n  const data = {\r\n    labels: answers,\r\n    datasets: [\r\n      {\r\n        backgroundColor: colorSet,\r\n        borderColor: colorSet,\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: Object.values(distributionPercent),\r\n        datalabels: {\r\n          anchor: \"end\",\r\n          align: \"start\",\r\n          offset: 20,\r\n          backgroundColor: function (ctx) {\r\n            // var value = ctx.dataset.data[ctx.dataIndex];\r\n            // return value > 50 ? \"white\" : null;\r\n            return null;\r\n          },\r\n          borderColor: function (ctx) {\r\n            // var value = ctx.dataset.data[ctx.dataIndex];\r\n            // return value > 0 ? \"white\" : null;\r\n            // return \"white\";\r\n            return null;\r\n          },\r\n          // borderWidth: 2,\r\n          // borderRadius: 4,\r\n          font: {\r\n            weight: \"bold\",\r\n            size: 40,\r\n          },\r\n          color: function (ctx) {\r\n            var value = ctx.dataset.data[ctx.dataIndex];\r\n            return value > 0 ? \"white\" : null;\r\n            // return \"white\";\r\n          },\r\n          formatter: function (value, ctx) {\r\n            console.log(\"user answer is \" + userAnswer);\r\n            if (!ctx.active) {\r\n              return value + \"%\";\r\n            } else if (ctx.dataIndex == correctAnswer - 1) {\r\n              return \"Correct\";\r\n            } else if (ctx.dataIndex == userAnswer - 1) {\r\n              return \"Yours\";\r\n            } else {\r\n              return value + \"%\";\r\n            }\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className='flex-container'>\r\n      <Typography variant='h5' font='Montserrat'>\r\n        {sentence}\r\n        {/* {icon} */}\r\n      </Typography>\r\n      <audio autoPlay>\r\n        <source\r\n          src={\r\n            \"https://www.dropbox.com/s/rkly14ns3hnpq3i/zapsplat_animals_birds_spotted_dove_call_australia_56396.mp3?raw=1\"\r\n          }\r\n        />\r\n      </audio>\r\n      <div className='bottom-bars'>\r\n        <Bar\r\n          data={data}\r\n          options={{\r\n            layout: {\r\n              padding: {\r\n                top: 40,\r\n              },\r\n              margin: {\r\n                bottom: 20,\r\n              },\r\n            },\r\n            animation: {\r\n              duration: 2300,\r\n            },\r\n            legend: {\r\n              display: false,\r\n            },\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              labels: {\r\n                render: \"image\",\r\n                textMargin: 10,\r\n                images: imagesByResult,\r\n              },\r\n              datalabels: {\r\n                labels: {\r\n                  color: \"blue\",\r\n                  labels: {\r\n                    title: {\r\n                      font: {\r\n                        weight: \"bold\",\r\n                        size: 100,\r\n                      },\r\n                    },\r\n                    value: {\r\n                      color: \"green\",\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  display: true,\r\n                  ticks: {\r\n                    fontSize: 30,\r\n                  },\r\n                  gridLines: {\r\n                    paddingTop: 10,\r\n                    drawBorder: true,\r\n                    color: \"black\",\r\n                    drawOnChartArea: false,\r\n                    drawTicks: false,\r\n                  },\r\n                },\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  ticks: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction CorrectnessIcon(result) {\r\n  if (result) {\r\n    return <img width={30} height={30} src={correctSvg} />;\r\n  } else {\r\n    return <img width={30} height={30} src={incorrectSvg} />;\r\n  }\r\n}\r\nfunction imagesSetter(answers, correctAnswer, userAnswer) {\r\n  let imagesByResult = [];\r\n  for (let index = 0; index < answers.length; index++) {\r\n    if (index + 1 === userAnswer || index + 1 === correctAnswer) {\r\n      if (userAnswer === index + 1) {\r\n        imagesByResult[index] = {\r\n          //Wrong Answer\r\n          src: incorrectSvg,\r\n          width: 30,\r\n          height: 30,\r\n        };\r\n      }\r\n      if (correctAnswer === index + 1) {\r\n        imagesByResult[index] = {\r\n          //Correct Answer\r\n          src: correctSvg,\r\n          width: 30,\r\n          height: 30,\r\n        };\r\n      }\r\n    } else {\r\n      imagesByResult[index] = null;\r\n    }\r\n  }\r\n  return imagesByResult;\r\n}\r\nBars.propTypes = {\r\n  distribution: PropTypes.object.isRequired,\r\n  correctAnswer: PropTypes.number.isRequired,\r\n  userAnswer: PropTypes.number.isRequired,\r\n  answers: PropTypes.array.isRequired,\r\n  audioUrl: PropTypes.string.isRequired,\r\n};\r\nfunction castToPercent(distribution) {\r\n  let total = 0;\r\n  Object.values(distribution).forEach((element) => {\r\n    total += element;\r\n  });\r\n\r\n  let distributionPercent = {};\r\n  Object.keys(distribution).forEach((element) => {\r\n    distributionPercent[element] = Math.round(\r\n      (100 * distribution[element]) / total\r\n    );\r\n  });\r\n  return distributionPercent;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  distribution: state.user.userState.phaseProp.distribution,\r\n  correctAnswer: state.user.userState.phaseProp.correctAnswer,\r\n  userAnswer: state.user.userState.phaseProp.userAnswer,\r\n  answers: state.user.userState.phaseProp.answers,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Bars);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js",["187"],"// Worked 15 -2 -21\r\n\r\n// import { connect } from \"react-redux\";\r\n// import PropTypes from \"prop-types\";\r\n// import React, { Fragment, useState } from \"react\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import { UserAnswer } from \"../../actions/user\";\r\n// import { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import KeyboardEventHandler from \"react-keyboard-event-handler\";\r\n// import \"../layouts/css/Question.css\";\r\n// const Question = ({ question, answers, time, UserAnswer }) => {\r\n//   var t0 = performance.now();\r\n//   const indexes = [];\r\n//   let tmp = 0;\r\n//   for (let index = 0; index < answers.length; index++) {\r\n//     tmp = index + 1;\r\n//     indexes[index] = tmp + \"\";\r\n//   }\r\n//   const [isDisabled, setDisable] = useState(false);\r\n//   const onAnswerClick = (num) => {\r\n//     var t1 = performance.now();\r\n//     setDisable(true);\r\n//     UserAnswer(num, Math.round(t1 - t0));\r\n//   };\r\n\r\n//   const handleKeyDown = React.useCallback((key) => {\r\n//     var t1 = performance.now();\r\n//     setDisable(true);\r\n//     UserAnswer(parseInt(key), Math.round(t1 - t0));\r\n//   });\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <div className='col-centered'>\r\n//         <CountdownCircleTimer\r\n//           size={300}\r\n//           isPlaying\r\n//           duration={time}\r\n//           colors={[\r\n//             [\"#004777\", 0.33],\r\n//             [\"#F7B801\", 0.33],\r\n//             [\"#A30000\", 0.33],\r\n//           ]}\r\n//         >\r\n//           {({ remainingTime }) => remainingTime}\r\n//         </CountdownCircleTimer>\r\n//       </div>\r\n//       <div className='col-centered'>\r\n//         <Typography variant='h2'>{question}</Typography>\r\n//       </div>\r\n//       <div className='answers'>\r\n//         {answers.map((ans, index) => (\r\n//           <Button\r\n//             className={index % 2 == 0 ? \"left-sideBut\" : \"right-sideBut\"}\r\n//             key={index + 1}\r\n//             variant='contained'\r\n//             color='primary'\r\n//             style={{ margin: 5 }}\r\n//             disabled={isDisabled}\r\n//             onClick={(e) => onAnswerClick(index + 1)}\r\n\r\n//           >\r\n//             {ans}\r\n//           </Button>\r\n//         ))}\r\n//         <KeyboardEventHandler\r\n//           handleKeys={indexes}\r\n//           onKeyEvent={(key, e) => handleKeyDown(key)}\r\n//         />\r\n//       </div>\r\n//     </React.Fragment>\r\n//   );\r\n// };\r\n\r\n// Question.propTypes = {\r\n//   question: PropTypes.string.isRequired,\r\n//   answers: PropTypes.array,\r\n//   time: PropTypes.number,\r\n//   UserAnswer: PropTypes.func.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   question: state.user.userState.phaseProp.question,\r\n//   answers: state.user.userState.phaseProp.answers,\r\n//   time: state.user.userState.phaseProp.time,\r\n// });\r\n// export default connect(mapStateToProps, { UserAnswer })(Question);\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { UserAnswer } from \"../../actions/user\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { Textfit } from \"react-textfit\";\r\nimport \"../layouts/css/Questions.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nclass Question extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      part: \"listening\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.part === \"listening\") {\r\n      var audioElement = document.getElementById(\"myAudio\");\r\n      if (audioElement != null) {\r\n        console.log(this.props.audioUrl);\r\n        const self = this;\r\n        audioElement.addEventListener(\r\n          \"ended\",\r\n          function () {\r\n            self.setState({ part: \"animation\" });\r\n          },\r\n          false\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.part == \"listening\") {\r\n      var t0 = performance.now();\r\n    }\r\n    var part = this.state.part;\r\n    var questDiv;\r\n    var allQuestDivs = [];\r\n    var classNames = [];\r\n    const indexes = [];\r\n    let tmp = 0;\r\n    for (let index = 0; index < this.props.answers.length; index++) {\r\n      tmp = index + 1;\r\n      indexes[index] = tmp + \"\";\r\n    }\r\n    if (part === \"animation\") {\r\n      classNames = [\r\n        \"singleAnswer s1\",\r\n        \"singleAnswer s2\",\r\n        \"singleAnswer s3\",\r\n        \"singleAnswer s4\",\r\n      ];\r\n      for (\r\n        let index = 0;\r\n        index < this.props.answers.length;\r\n        index = index + 1\r\n      ) {\r\n        questDiv = (\r\n          <button\r\n            onClick={(e) => onAnswerClick(index)}\r\n            className={classNames[index]}\r\n          >\r\n            <div className={\"numberCircle\"}>{index + 1}</div>\r\n            <Textfit max={40} min={26} mode='multi'>\r\n              {this.props.answers[index]}\r\n            </Textfit>\r\n          </button>\r\n        );\r\n        allQuestDivs.push(questDiv);\r\n      }\r\n    } else if (part === \"answered\") {\r\n      /*\r\n      build the part of waiting for moving to next phase.\r\n    */\r\n      classNames = [\r\n        \"singleAnswer e1\",\r\n        \"singleAnswer e2\",\r\n        \"singleAnswer e3\",\r\n        \"singleAnswer e4\",\r\n      ];\r\n      classNames[this.state.selected] =\r\n        \"singleAnswer s\" + (this.state.selected + 1);\r\n      for (\r\n        let index = 0;\r\n        index < this.props.answers.length;\r\n        index = index + 1\r\n      ) {\r\n        questDiv = (\r\n          <button disabled={true} className={classNames[index]}>\r\n            <Textfit max={40} min={26} mode='multi'>\r\n              {this.props.answers[index]}\r\n            </Textfit>\r\n          </button>\r\n        );\r\n        allQuestDivs.push(questDiv);\r\n      }\r\n    }\r\n\r\n    /*\r\n    Func Declarations :\r\n    \r\n    */\r\n    const onAnswerClick = (ind) => {\r\n      var t1 = performance.now();\r\n      this.setState({ part: \"answered\", selected: ind });\r\n      console.log(\"now user answer\");\r\n      this.props.UserAnswer(ind, Math.round(t1 - t0));\r\n    };\r\n\r\n    const handleKeyDown = (key) => {\r\n      this.setState({ part: \"answered\", selected: parseInt(key) - 1 });\r\n      var t1 = performance.now();\r\n      console.log(\"now user answer\");\r\n      this.props.UserAnswer(parseInt(key), Math.round(t1 - t0));\r\n    };\r\n\r\n    /*\r\n    Components Declareations :\r\n    */\r\n\r\n    const listeningQuestion = (\r\n      <div className='flex-container'>\r\n        <div className='question'>{this.props.question}</div>\r\n        <CircularProgress size={100} />\r\n        <audio id='myAudio' autoPlay>\r\n          <source src={this.props.audioUrl} />\r\n        </audio>\r\n      </div>\r\n    );\r\n\r\n    const animation = (\r\n      <React.Fragment>\r\n        <div className='question questAnimation'>{this.props.question}</div>\r\n        <div className='circleAnimation'>\r\n          <CircularProgress size={100} />\r\n        </div>\r\n        <div className='quest-container'>{allQuestDivs}</div>\r\n        <KeyboardEventHandler\r\n          handleKeys={indexes}\r\n          onKeyEvent={(key, e) => handleKeyDown(key)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n\r\n    const answeredAndWait = (\r\n      <React.Fragment>\r\n        <div className='quest-container-answered'>{allQuestDivs}</div>\r\n      </React.Fragment>\r\n    );\r\n    if (part === \"listening\") {\r\n      return listeningQuestion;\r\n    } else if (part === \"animation\") {\r\n      return animation;\r\n    } else if (part === \"answered\") {\r\n      return answeredAndWait;\r\n    }\r\n  }\r\n}\r\n\r\nQuestion.propTypes = {\r\n  question: PropTypes.string.isRequired,\r\n  answers: PropTypes.array,\r\n  time: PropTypes.number,\r\n  UserAnswer: PropTypes.func.isRequired,\r\n  audioUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  question: state.user.userState.phaseProp.question,\r\n  answers: state.user.userState.phaseProp.answers,\r\n  time: state.user.userState.phaseProp.time,\r\n  audioUrl: state.user.userState.phaseProp.audioUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, { UserAnswer })(Question);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\SpotlightCheck.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\windeoResize.js",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":18},{"ruleId":"192","severity":1,"message":"196","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":21},{"ruleId":"192","severity":1,"message":"197","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":12},{"ruleId":"192","severity":1,"message":"198","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":22,"column":9,"nodeType":"201","endLine":22,"endColumn":50},{"ruleId":"199","severity":1,"message":"200","line":24,"column":9,"nodeType":"201","endLine":24,"endColumn":53},{"ruleId":"192","severity":1,"message":"202","line":2,"column":3,"nodeType":"194","messageId":"195","endLine":2,"endColumn":18},{"ruleId":"192","severity":1,"message":"203","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"204","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":15},{"ruleId":"205","severity":1,"message":"206","line":33,"column":3,"nodeType":"207","messageId":"208","endLine":33,"endColumn":22},{"ruleId":"192","severity":1,"message":"202","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"209","line":1,"column":41,"nodeType":"194","messageId":"195","endLine":1,"endColumn":54},{"ruleId":"192","severity":1,"message":"210","line":2,"column":3,"nodeType":"194","messageId":"195","endLine":2,"endColumn":13},{"ruleId":"192","severity":1,"message":"211","line":3,"column":3,"nodeType":"194","messageId":"195","endLine":3,"endColumn":12},{"ruleId":"192","severity":1,"message":"209","line":2,"column":3,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"212","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":26},{"ruleId":"192","severity":1,"message":"213","line":2,"column":28,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"214","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"213","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":35},{"ruleId":"192","severity":1,"message":"214","line":1,"column":37,"nodeType":"194","messageId":"195","endLine":1,"endColumn":46},{"ruleId":"192","severity":1,"message":"215","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":16},{"ruleId":"192","severity":1,"message":"216","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":21,"column":21,"nodeType":"219","messageId":"220","endLine":21,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":76,"column":38,"nodeType":"219","messageId":"220","endLine":76,"endColumn":40},{"ruleId":"217","severity":1,"message":"218","line":78,"column":38,"nodeType":"219","messageId":"220","endLine":78,"endColumn":40},{"ruleId":"192","severity":1,"message":"221","line":177,"column":10,"nodeType":"194","messageId":"195","endLine":177,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":179,"column":12,"nodeType":"201","endLine":179,"endColumn":59},{"ruleId":"199","severity":1,"message":"200","line":181,"column":12,"nodeType":"201","endLine":181,"endColumn":61},{"ruleId":"217","severity":1,"message":"218","line":124,"column":25,"nodeType":"219","messageId":"220","endLine":124,"endColumn":27},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'httpPath' is defined but never used.","Identifier","unusedVar","'DialogTitle' is defined but never used.","'Game' is defined but never used.","'View' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'KEYGAME_SUCCESS' is defined but never used.","'Fragment' is defined but never used.","'login' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'CHANGE_SCREEN' is defined but never used.","'START_GAME' is defined but never used.","'GAME_PROP' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Confetti' is defined but never used.","'Player' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CorrectnessIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]