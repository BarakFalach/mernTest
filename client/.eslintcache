[{"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js":"1","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js":"2","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js":"3","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js":"4","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js":"5","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js":"6","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js":"7","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js":"8","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js":"9","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js":"10","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js":"11","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js":"12","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js":"13","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js":"14","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js":"15","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js":"16","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js":"17","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js":"18","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js":"19","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js":"20","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\WaitingRoom.js":"21","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js":"22","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js":"23","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js":"24","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js":"25","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js":"26","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js":"27","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js":"28","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js":"29","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js":"30"},{"size":207,"mtime":1608038562091,"results":"31","hashOfConfig":"32"},{"size":1764,"mtime":1608215391152,"results":"33","hashOfConfig":"32"},{"size":397,"mtime":1607981746162,"results":"34","hashOfConfig":"32"},{"size":251,"mtime":1607981746163,"results":"35","hashOfConfig":"32"},{"size":2188,"mtime":1608116192746,"results":"36","hashOfConfig":"32"},{"size":2921,"mtime":1607981746146,"results":"37","hashOfConfig":"32"},{"size":637,"mtime":1608038753886,"results":"38","hashOfConfig":"32"},{"size":506,"mtime":1607981746148,"results":"39","hashOfConfig":"32"},{"size":667,"mtime":1607981746149,"results":"40","hashOfConfig":"32"},{"size":1997,"mtime":1608215391155,"results":"41","hashOfConfig":"32"},{"size":895,"mtime":1608215391158,"results":"42","hashOfConfig":"32"},{"size":2153,"mtime":1608215391156,"results":"43","hashOfConfig":"32"},{"size":1104,"mtime":1608215391156,"results":"44","hashOfConfig":"32"},{"size":72,"mtime":1608215391160,"results":"45","hashOfConfig":"32"},{"size":357,"mtime":1607981746133,"results":"46","hashOfConfig":"32"},{"size":758,"mtime":1608215391154,"results":"47","hashOfConfig":"32"},{"size":86,"mtime":1608145598787,"results":"48","hashOfConfig":"32"},{"size":88,"mtime":1608145598785,"results":"49","hashOfConfig":"32"},{"size":87,"mtime":1608145598788,"results":"50","hashOfConfig":"32"},{"size":86,"mtime":1608145598786,"results":"51","hashOfConfig":"32"},{"size":898,"mtime":1608145598789,"results":"52","hashOfConfig":"32"},{"size":1664,"mtime":1608215391155,"results":"53","hashOfConfig":"32"},{"size":1418,"mtime":1608215391158,"results":"54","hashOfConfig":"32"},{"size":1434,"mtime":1608215391153,"results":"55","hashOfConfig":"32"},{"size":1499,"mtime":1608215391157,"results":"56","hashOfConfig":"32"},{"size":247,"mtime":1608215391159,"results":"57","hashOfConfig":"32"},{"size":397,"mtime":1607981746158,"results":"58","hashOfConfig":"32"},{"size":1064,"mtime":1608215391160,"results":"59","hashOfConfig":"32"},{"size":1204,"mtime":1608215391159,"results":"60","hashOfConfig":"32"},{"size":577,"mtime":1608215391159,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1k5eq83",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js",[],["131","132"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js",["133"],"import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\nimport { httpPath } from \"../utils/ClientUtils\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  ADMIN_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\n//Load Admin\r\nexport const loadAdmin = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    console.log(\"1\");\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: ADMIN_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// actions/auth.js must have same name as reducers/auth.js\r\n//Register Admin\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/admin\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err;\r\n\r\n    if (errors) {\r\n      // errors.foreach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n//Login Admin\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT Admin\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n//StartGame\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js",["134","135","136"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\n// import { Question } from \"./Question\";\r\nimport { Answer } from \"./Answer\";\r\nimport { Video } from \"./Video\";\r\nimport { Top3 } from \"./Top3\";\r\nimport { Poll } from \"./Poll\";\r\n\r\nconst Game = ({ screen }) => {\r\n  switch (screen) {\r\n    case \"question\":\r\n    // return <Question />;\r\n    case \"answer\":\r\n      return <Answer />;\r\n    case \"video\":\r\n      return <Video />;\r\n    case \"poll\":\r\n      return <Poll />;\r\n    case \"top3\":\r\n      return <Top3 />;\r\n    default:\r\n      return <h1>Defult Screen</h1>;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nGame.propTypes = {\r\n  screen: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  screen: state.user.screen,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Game);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js",["137"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport WaitingRoom from \"../layouts/WaitingRoom\";\r\nimport Game from \"../game/Game\";\r\nimport Question from \"../game/Question\";\r\n\r\nconst LoginUser = ({ login, isAuthenticated, questions }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    keygame: \"\",\r\n  });\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"key game is \" + keygame);\r\n    login({ name, keygame });\r\n  };\r\n\r\n  if (questions.length > 0) {\r\n    console.log(\"Login User Got THe Question\");\r\n    return <Question />;\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    console.log(\"user - isAuthenticated\");\r\n    return <Game />;\r\n  }\r\n\r\n  const { name, keygame } = formData;\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>User Interface</h1>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            className='formField'\r\n            type='text'\r\n            placeholder='Full Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            className='formField'\r\n            type='number'\r\n            placeholder='keygame'\r\n            name='keygame'\r\n            value={keygame}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login'></input>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLoginUser.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  questions: PropTypes.array,\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  questions: state.user.questions,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginUser);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\WaitingRoom.js",["138"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport Game from \"../game/Game\";\r\n\r\nconst WaitingRoom = ({ id, login, screen, isAuthenticated }) => {\r\n  if (screen) {\r\n    return <Game />;\r\n  }\r\n\r\n  //TODO:: add authetiract in this page, {PrivateRouth}\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Waiting Room</h1>\r\n      <h2>welocome {id} </h2>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nWaitingRoom.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  login: PropTypes.func.isRequired,\r\n  id: PropTypes.number,\r\n  screen: PropTypes.bool,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  id: state.user.id,\r\n  screen: state.user.screen,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(WaitingRoom);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js",["139","140"],"import { KEYGAME_SUCCESS, KEYGAME_FAIL, CHANGE_SCREEN } from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Login User\r\nexport const login = ({ name, keygame }) => async (dispatch) => {\r\n  try {\r\n    console.log(\"Baraka\");\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n    console.log(\"Baraka2\");\r\n\r\n    client.onopen = () => {\r\n      console.log(\"WebSocket Client Connected\");\r\n      console.log(\"name is\" + name);\r\n      console.log(\"keygame is\" + keygame);\r\n      client.send(\r\n        JSON.stringify({\r\n          type: \"REQ_USER_LOGIN\",\r\n          name: name,\r\n          keygame: keygame,\r\n        })\r\n      );\r\n    };\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      console.log(\"got reply! \", dataFromServer);\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    // const errors = err.response.data.errors;\r\n    // if (errors) {\r\n    //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    // }\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const UserAnswer = (res) => async (dispatch) => {\r\n  const ansAsJSON = JSON.stringify({\r\n    type: \"USER_ANSWER\",\r\n    answer: res,\r\n    time: 3,\r\n  });\r\n  dispatch({});\r\n  client.send(ansAsJSON);\r\n};\r\n\r\n// //LOGOUT Admin\r\n// export const logout = () => (dispatch) => {\r\n//   dispatch({\r\n//     type: LOGOUT,\r\n//   });\r\n// };\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js",["141"],"import {\r\n  KEYGAME_SUCCESS,\r\n  KEYGAME_FAIL,\r\n  CHANGE_SCREEN,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n} from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Start Game Admin\r\nexport const startGame = () => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: CREATE_NEW_GAME_INSTANCE,\r\n        })\r\n      );\r\n    };\r\n    // get The Game Properties\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const ChangeScreen = (screenType, screenName = \"\") => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: CHANGE_SCREEN, //TODO::need to write func in server.\r\n        screen: screenType,\r\n        screenName: screenName,\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js",[],["142","143"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js",["144","145"],"import {\r\n  START_GAME,\r\n  GAME_PROP,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  videoNames: [\"errorVideo\"],\r\n  questionNames: [\"errorQuestion\"],\r\n  Gamekey: \"000\",\r\n};\r\n\r\nexport default function dashBoardReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_NEW_GAME_INSTANCE:\r\n      return {\r\n        ...state,\r\n        videoNames: payload.Video,\r\n        questionNames: payload.Q,\r\n        GameKey: payload.keyGame,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"150","severity":1,"message":"154","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":15,"column":5,"nodeType":"157","messageId":"158","endLine":16,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":26,"column":3,"nodeType":"161","messageId":"162","endLine":26,"endColumn":22},{"ruleId":"150","severity":1,"message":"163","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":19},{"ruleId":"150","severity":1,"message":"164","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":35},{"ruleId":"150","severity":1,"message":"165","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"166","line":1,"column":41,"nodeType":"152","messageId":"153","endLine":1,"endColumn":54},{"ruleId":"150","severity":1,"message":"165","line":2,"column":3,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"146","replacedBy":"167"},{"ruleId":"148","replacedBy":"168"},{"ruleId":"150","severity":1,"message":"169","line":2,"column":3,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"170","line":3,"column":3,"nodeType":"152","messageId":"153","endLine":3,"endColumn":12},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'httpPath' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'WaitingRoom' is defined but never used.","'useState' is defined but never used.","'KEYGAME_SUCCESS' is defined but never used.","'CHANGE_SCREEN' is defined but never used.",["171"],["172"],"'START_GAME' is defined but never used.","'GAME_PROP' is defined but never used.","no-global-assign","no-unsafe-negation"]