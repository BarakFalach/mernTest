[{"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\index.js":"1","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\App.js":"2","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\store.js":"3","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\auth.js":"5","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js":"7","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\layouts\\Alert.js":"8","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginUser.js":"9","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\layouts\\Landing.js":"10","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js":"11","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js":"12","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Game.js":"13","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\alert.js":"14","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\utils\\ClientUtils.js":"15","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\dashboard.js":"16","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\types.js":"17","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\user.js":"18","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js":"19","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Phase.js":"20","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\index.js":"21","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js":"22","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Question.js":"23","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Answer.js":"24","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Poll.js":"25","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Top3.js":"26","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Video.js":"27","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\alert.js":"28","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\auth.js":"29","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\user.js":"30","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\dashboard.js":"31","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\windeoResize.js":"32","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Bars.js":"33"},{"size":207,"mtime":1608033880257,"results":"34","hashOfConfig":"35"},{"size":1764,"mtime":1610030313820,"results":"36","hashOfConfig":"35"},{"size":397,"mtime":1607842237439,"results":"37","hashOfConfig":"35"},{"size":251,"mtime":1607944225565,"results":"38","hashOfConfig":"35"},{"size":2188,"mtime":1608199221662,"results":"39","hashOfConfig":"35"},{"size":2921,"mtime":1607944225552,"results":"40","hashOfConfig":"35"},{"size":1997,"mtime":1610030313825,"results":"41","hashOfConfig":"35"},{"size":506,"mtime":1607858821922,"results":"42","hashOfConfig":"35"},{"size":2128,"mtime":1610030313826,"results":"43","hashOfConfig":"35"},{"size":637,"mtime":1607842862121,"results":"44","hashOfConfig":"35"},{"size":1104,"mtime":1610030313826,"results":"45","hashOfConfig":"35"},{"size":667,"mtime":1607944225556,"results":"46","hashOfConfig":"35"},{"size":804,"mtime":1610127822184,"results":"47","hashOfConfig":"35"},{"size":357,"mtime":1607944225542,"results":"48","hashOfConfig":"35"},{"size":72,"mtime":1610128618735,"results":"49","hashOfConfig":"35"},{"size":1397,"mtime":1610030323796,"results":"50","hashOfConfig":"35"},{"size":806,"mtime":1610127822179,"results":"51","hashOfConfig":"35"},{"size":1548,"mtime":1610127822180,"results":"52","hashOfConfig":"35"},{"size":1248,"mtime":1610127822182,"results":"53","hashOfConfig":"35"},{"size":954,"mtime":1610132982397,"results":"54","hashOfConfig":"35"},{"size":247,"mtime":1610030313841,"results":"55","hashOfConfig":"35"},{"size":1684,"mtime":1610127822182,"results":"56","hashOfConfig":"35"},{"size":3662,"mtime":1610132823845,"results":"57","hashOfConfig":"35"},{"size":88,"mtime":1608145656540,"results":"58","hashOfConfig":"35"},{"size":86,"mtime":1608145656542,"results":"59","hashOfConfig":"35"},{"size":86,"mtime":1608145656544,"results":"60","hashOfConfig":"35"},{"size":776,"mtime":1610127822184,"results":"61","hashOfConfig":"35"},{"size":397,"mtime":1607944225559,"results":"62","hashOfConfig":"35"},{"size":1204,"mtime":1610030313839,"results":"63","hashOfConfig":"35"},{"size":1050,"mtime":1610127822187,"results":"64","hashOfConfig":"35"},{"size":622,"mtime":1610127822186,"results":"65","hashOfConfig":"35"},{"size":617,"mtime":1610030323808,"results":"66","hashOfConfig":"35"},{"size":1105,"mtime":1610137229591,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"edq6ir",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\index.js",[],["146","147"],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\App.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\store.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\auth.js",["148"],"import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\nimport { httpPath } from \"../utils/ClientUtils\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  ADMIN_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\n//Load Admin\r\nexport const loadAdmin = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    console.log(\"1\");\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: ADMIN_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// actions/auth.js must have same name as reducers/auth.js\r\n//Register Admin\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/admin\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err;\r\n\r\n    if (errors) {\r\n      // errors.foreach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n//Login Admin\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT Admin\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n//StartGame\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\layouts\\Alert.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\auth\\LoginUser.js",["149","150"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport { DialogTitle, Typography, TextField } from \"@material-ui/core\";\r\nimport Game from \"../game/Game\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LoginUser = ({ login, isAuthenticated, questions }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    keygame: \"\",\r\n  });\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"key game is \" + keygame);\r\n    login({ name, keygame });\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/game\" />;\r\n  }\r\n\r\n  const { name, keygame } = formData;\r\n  return (\r\n    <Fragment>\r\n      <Typography variant=\"h2\" color=\"primary\">\r\n        User Interface\r\n      </Typography>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            className=\"formField\"\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            className=\"formField\"\r\n            type=\"number\"\r\n            placeholder=\"keygame\"\r\n            name=\"keygame\"\r\n            value={keygame}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <TextField\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          value=\"Login\"\r\n        ></TextField>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLoginUser.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  questions: PropTypes.array,\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  questions: state.user.questions,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginUser);\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\layouts\\Landing.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Game.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\alert.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\utils\\ClientUtils.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\dashboard.js",["151"],"import {\r\n  KEYGAME_SUCCESS,\r\n  KEYGAME_FAIL,\r\n  PHASE,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n} from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Start Game Admin\r\nexport const startGame = () => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: CREATE_NEW_GAME_INSTANCE,\r\n        })\r\n      );\r\n    };\r\n    // get The Game Properties\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const ChangePhase = (phaseName = \"\") => async (dispatch) => {\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: PHASE, //TODO::need to write func in server.\r\n        // phase: phaseType,\r\n        phaseName: phaseName,\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\types.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\actions\\user.js",["152","153"],"import { KEYGAME_SUCCESS, KEYGAME_FAIL, CHANGE_SCREEN } from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Login User\r\nexport const login = ({ name, keygame }) => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: \"REQ_USER_LOGIN\",\r\n          name: name,\r\n          keygame: keygame,\r\n        })\r\n      );\r\n    };\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      console.log(\"got reply! \", dataFromServer);\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    // const errors = err.response.data.errors;\r\n    // if (errors) {\r\n    //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    // }\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//TODO MIGHT NEED =>async dispatch\r\nexport const UserAnswer = (AnswerNum, time) => async () => {\r\n  console.log(\"Answer Num\" + AnswerNum);\r\n  console.log(\"Time\" + time);\r\n  client.send(JSON.stringify({\r\n    type: \"USER_ANSWER\",\r\n    answer: AnswerNum,\r\n    time: time,\r\n  }));\r\n};\r\n\r\n// //LOGOUT Admin\r\n// export const logout = () => (dispatch) => {\r\n//   dispatch({\r\n//     type: LOGOUT,\r\n//   });\r\n// };\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Phase.js",["154","155","156"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport Question from \"./Question\";\r\nimport Bars from \"./Bars\";\r\nimport { Answer } from \"./Answer\";\r\nimport Video from \"./Video\";\r\nimport { Top3 } from \"./Top3\";\r\nimport { Poll } from \"./Poll\";\r\n\r\nconst Phase = ({ phase }) => {\r\n  switch (phase) {\r\n    case \"Question\":\r\n      return <Question />;\r\n    case \"answer\":\r\n      return <Answer />;\r\n    case \"video\":\r\n      return <Video />;\r\n    case \"poll\":\r\n      return <Poll />;\r\n    case \"top3\":\r\n      return <Top3 />;\r\n    case \"bars\":\r\n      return <Bars />;\r\n    default:\r\n      return <h1>Defult Screen</h1>;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nPhase.propTypes = {\r\n  phase: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  phase: state.user.userState.phase,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Phase);\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\index.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Question.js",["157","158"],"import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UserAnswer } from \"../../actions/user\";\r\nimport \"../layouts/css/Question.css\";\r\nconst Question = ({ question, answers, UserAnswer }) => {\r\n  const [buttonDisable, setDisable] = useState(false);\r\n\r\n  const ques1 = question;\r\n  if (ques1 == null) {\r\n    console.log(\"ques 1 is null\");\r\n    return <Fragment></Fragment>;\r\n  }\r\n\r\n  const onAnswerClick = (e) => UserAnswer(e.target.name, 6);\r\n  return (\r\n    <div className='Questio_Comp'>\r\n      <div className='col-centered'>\r\n        <Button\r\n          color='secondary'\r\n          fullWidth='true'\r\n          size='large'\r\n          href='#text-buttons'\r\n        >\r\n          {question}\r\n        </Button>\r\n      </div>\r\n      <span className='answers'>\r\n        {answers.map((ans, index) => (\r\n          <button\r\n            fullWidth='true'\r\n            variant='contained'\r\n            color='primary'\r\n            style={{ margin: 5 }}\r\n            // disabled={buttonDisable}\r\n            name={index}\r\n            onClick={(e) => onAnswerClick(e)}\r\n          >\r\n            {ans}\r\n          </button>\r\n        ))}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  //   return (\r\n  //     <Fragment>\r\n  //       <div className=\"col-centered\">\r\n  //         <Button\r\n  //           fullWidth=\"true\"\r\n  //           size=\"large\"\r\n  //           href=\"#text-buttons\"\r\n  //           variant=\"contained\"\r\n  //           color=\"secondary\"\r\n  //         >\r\n  //           {qu}\r\n  //         </Button>\r\n  //       </div>\r\n  //       <div>\r\n  //         <p className=\"left-side\">\r\n  //           <Button\r\n  //             fullWidth=\"true\"\r\n  //             variant=\"contained\"\r\n  //             color=\"primary\"\r\n  //             value=\"1\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans1}\r\n  //           </Button>\r\n  //         </p>\r\n  //         <p className=\"right-side\">\r\n  //           <Button\r\n  //             fullWidth=\"true\"\r\n  //             variant=\"contained\"\r\n  //             color=\"primary\"\r\n  //             value=\"2\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans2}\r\n  //           </Button>\r\n  //         </p>\r\n  //       </div>\r\n  //       <div>\r\n  //         <p className=\"left-side\">\r\n  //           <Button\r\n  //             variant=\"contained\"\r\n  //             fullWidth=\"true\"\r\n  //             color=\"primary\"\r\n  //             value=\"3\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans3}\r\n  //           </Button>\r\n  //         </p>\r\n  //         <p className=\"right-side\">\r\n  //           <Button\r\n  //             fullWidth=\"true\"\r\n  //             variant=\"contained\"\r\n  //             color=\"primary\"\r\n  //             value=\"4\"\r\n  //             onClick={onAnswerClick}\r\n  //           >\r\n  //             {ans4}\r\n  //           </Button>\r\n  //         </p>\r\n  //       </div>\r\n  //       <audio autoPlay>\r\n  //         <source src=\"https://www.dropbox.com/s/z8qky594e03dyzm/file_example_MP3_700KB.mp3?raw=1\" />\r\n  //       </audio>\r\n  //     </Fragment>\r\n  //   );\r\n};\r\nQuestion.propTypes = {\r\n  question: PropTypes.string.isRequired,\r\n  answers: PropTypes.array,\r\n  time: PropTypes.number,\r\n  UserAnswer: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  question: state.user.userState.phaseProp.question,\r\n  answers: state.user.userState.phaseProp.answers,\r\n  time: state.user.userState.phaseProp.time,\r\n});\r\nexport default connect(mapStateToProps, { UserAnswer })(Question);\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Answer.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Poll.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Top3.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Video.js",["159"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Player from \"@vimeo/player\";\r\nimport Vimeo from \"@u-wave/react-vimeo\";\r\nimport useWindowDimensions from \"./windeoResize\";\r\n\r\nconst Video = ({ videoUrl }) => {\r\n  const { height, width } = useWindowDimensions();\r\n  return (\r\n    <div>\r\n      <Vimeo\r\n        video={videoUrl}\r\n        controls={false}\r\n        height={height - 100}\r\n        width={width}\r\n        autoplay\r\n        onEnd={() => console.log(\"VIDEO ENDED\")}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nVideo.prototype = {\r\n  videoUrl: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  videoUrl: state.user.userState.phaseProp.videoUrl,\r\n});\r\nexport default connect(mapStateToProps, {})(Video);\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\alert.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\auth.js",[],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\user.js",["160"],"import {\r\n  CHANGE_SCREEN,\r\n  KEYGAME_FAIL,\r\n  GAME_KEY_SUCCESS,\r\n  SERVER_FEEDBACK_TO_ANSWER,\r\n  PHASE,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  name: \"\",\r\n  isAuthenticated: false,\r\n  userState: {},\r\n  // score: \"0\",\r\n  group: \"\",\r\n};\r\n//func name Changed from login to userReducer\r\nexport default function userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  console.log(payload);\r\n  switch (type) {\r\n    case GAME_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        name: payload.name,\r\n        group: payload.group,\r\n        isAuthenticated: true,\r\n        userState: payload,\r\n      };\r\n    case KEYGAME_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case PHASE:\r\n      return {\r\n        ...state,\r\n        userState: payload,\r\n        //TODO:: change the screen state to name of the screen and not bool\r\n      };\r\n    case SERVER_FEEDBACK_TO_ANSWER:\r\n      return {\r\n        score: payload.score,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\reducers\\dashboard.js",["161","162"],"import {\r\n  START_GAME,\r\n  GAME_PROP,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n  USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  phaseList: [],\r\n  Gamekey: \"000\",\r\n  usersData: {},\r\n};\r\n\r\nexport default function dashBoardReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_NEW_GAME_INSTANCE:\r\n      return {\r\n        ...state,\r\n        phaseList: payload.phaseList,\r\n        GameKey: payload.keyGame,\r\n      };\r\n    case USER:\r\n      return {\r\n        ...state,\r\n        usersData: payload.usersData,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\windeoResize.js",[],["163","164"],"C:\\Users\\berdu\\Desktop\\Work\\mernTest\\client\\src\\components\\game\\Bars.js",["165","166","167"],"import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nconst Bars = ({ distribution, correct }) => {\r\n  const [buttonDisable, setDisable] = useState(false);\r\n  return (\r\n    <div className='Bars_Comp'>\r\n      <div className='col-centered'>This is bars</div>\r\n      <span className='bars'>\r\n        {Object.entries(distribution).map(([key, value]) => (\r\n          <button\r\n            fullWidth='true'\r\n            variant='contained'\r\n            color='primary'\r\n            style={{ margin: 5 }}\r\n            // disabled={buttonDisable}\r\n            name={key}\r\n          >\r\n            <li>{key}</li>\r\n            <li>{value}</li>\r\n          </button>\r\n        ))}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nBars.propTypes = {\r\n  distribution: PropTypes.object.isRequired,\r\n  correct: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  distribution: state.user.userState.phaseProp.distribution,\r\n  correct: state.user.userState.phaseProp.correct,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Bars);\r\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":18},{"ruleId":"172","severity":1,"message":"176","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":21},{"ruleId":"172","severity":1,"message":"177","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":12},{"ruleId":"172","severity":1,"message":"178","line":2,"column":3,"nodeType":"174","messageId":"175","endLine":2,"endColumn":18},{"ruleId":"172","severity":1,"message":"178","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"179","line":1,"column":41,"nodeType":"174","messageId":"175","endLine":1,"endColumn":54},{"ruleId":"172","severity":1,"message":"180","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"181","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":15},{"ruleId":"182","severity":1,"message":"183","line":29,"column":3,"nodeType":"184","messageId":"185","endLine":29,"endColumn":22},{"ruleId":"172","severity":1,"message":"186","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":23},{"ruleId":"172","severity":1,"message":"187","line":8,"column":25,"nodeType":"174","messageId":"175","endLine":8,"endColumn":35},{"ruleId":"172","severity":1,"message":"188","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"179","line":2,"column":3,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"189","line":2,"column":3,"nodeType":"174","messageId":"175","endLine":2,"endColumn":13},{"ruleId":"172","severity":1,"message":"190","line":3,"column":3,"nodeType":"174","messageId":"175","endLine":3,"endColumn":12},{"ruleId":"168","replacedBy":"191"},{"ruleId":"170","replacedBy":"192"},{"ruleId":"172","severity":1,"message":"180","line":3,"column":17,"nodeType":"174","messageId":"175","endLine":3,"endColumn":25},{"ruleId":"172","severity":1,"message":"186","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":23},{"ruleId":"172","severity":1,"message":"187","line":6,"column":25,"nodeType":"174","messageId":"175","endLine":6,"endColumn":35},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'httpPath' is defined but never used.","Identifier","unusedVar","'DialogTitle' is defined but never used.","'Game' is defined but never used.","'KEYGAME_SUCCESS' is defined but never used.","'CHANGE_SCREEN' is defined but never used.","'Fragment' is defined but never used.","'login' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'buttonDisable' is assigned a value but never used.","'setDisable' is assigned a value but never used.","'Player' is defined but never used.","'START_GAME' is defined but never used.","'GAME_PROP' is defined but never used.",["193"],["194"],"no-global-assign","no-unsafe-negation"]