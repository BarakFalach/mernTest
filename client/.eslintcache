[{"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js":"1","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js":"2","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js":"3","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js":"4","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js":"5","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js":"6","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js":"7","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js":"8","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js":"9","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js":"10","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js":"11","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js":"12","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js":"13","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js":"14","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js":"15","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js":"16","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js":"17","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js":"18","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Phase.js":"19","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js":"20","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js":"21","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js":"22","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js":"23","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Groups.js":"24","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js":"25","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Bars.js":"26","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js":"27","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js":"28","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\WebcamCapture.js":"29","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js":"30","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js":"31","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js":"32","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js":"33","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js":"34","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\SpotlightCheck.js":"35","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\windeoResize.js":"36"},{"size":207,"mtime":1608038562091,"results":"37","hashOfConfig":"38"},{"size":1764,"mtime":1613904609592,"results":"39","hashOfConfig":"38"},{"size":397,"mtime":1607981746162,"results":"40","hashOfConfig":"38"},{"size":2188,"mtime":1608289045731,"results":"41","hashOfConfig":"38"},{"size":251,"mtime":1607981746163,"results":"42","hashOfConfig":"38"},{"size":1997,"mtime":1608215391155,"results":"43","hashOfConfig":"38"},{"size":506,"mtime":1607981746148,"results":"44","hashOfConfig":"38"},{"size":2985,"mtime":1614005271256,"results":"45","hashOfConfig":"38"},{"size":1031,"mtime":1613904609632,"results":"46","hashOfConfig":"38"},{"size":667,"mtime":1607981746149,"results":"47","hashOfConfig":"38"},{"size":1104,"mtime":1608215391156,"results":"48","hashOfConfig":"38"},{"size":2921,"mtime":1607981746146,"results":"49","hashOfConfig":"38"},{"size":1268,"mtime":1613904609620,"results":"50","hashOfConfig":"38"},{"size":357,"mtime":1607981746133,"results":"51","hashOfConfig":"38"},{"size":806,"mtime":1610032615533,"results":"52","hashOfConfig":"38"},{"size":250,"mtime":1613397183793,"results":"53","hashOfConfig":"38"},{"size":1877,"mtime":1613904609616,"results":"54","hashOfConfig":"38"},{"size":1758,"mtime":1610274131878,"results":"55","hashOfConfig":"38"},{"size":1157,"mtime":1614002665571,"results":"56","hashOfConfig":"38"},{"size":1769,"mtime":1613933615227,"results":"57","hashOfConfig":"38"},{"size":247,"mtime":1608215391159,"results":"58","hashOfConfig":"38"},{"size":1810,"mtime":1613904609616,"results":"59","hashOfConfig":"38"},{"size":959,"mtime":1613555321805,"results":"60","hashOfConfig":"38"},{"size":5664,"mtime":1614006398978,"results":"61","hashOfConfig":"38"},{"size":88,"mtime":1608145598785,"results":"62","hashOfConfig":"38"},{"size":6859,"mtime":1613991867634,"results":"63","hashOfConfig":"38"},{"size":4987,"mtime":1613994033488,"results":"64","hashOfConfig":"38"},{"size":86,"mtime":1608145598786,"results":"65","hashOfConfig":"38"},{"size":4832,"mtime":1613994006700,"results":"66","hashOfConfig":"38"},{"size":7712,"mtime":1613933615210,"results":"67","hashOfConfig":"38"},{"size":397,"mtime":1607981746158,"results":"68","hashOfConfig":"38"},{"size":1204,"mtime":1608215391159,"results":"69","hashOfConfig":"38"},{"size":1141,"mtime":1613904609637,"results":"70","hashOfConfig":"38"},{"size":622,"mtime":1610032615542,"results":"71","hashOfConfig":"38"},{"size":3620,"mtime":1613994057933,"results":"72","hashOfConfig":"38"},{"size":617,"mtime":1609004489040,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1k5eq83",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js",[],["159","160"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js",["161"],"import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\nimport { httpPath } from \"../utils/ClientUtils\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  ADMIN_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\n//Load Admin\r\nexport const loadAdmin = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    console.log(\"1\");\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: ADMIN_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// actions/auth.js must have same name as reducers/auth.js\r\n//Register Admin\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/admin\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err;\r\n\r\n    if (errors) {\r\n      // errors.foreach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n//Login Admin\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT Admin\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n//StartGame\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js",["162","163"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js",["164"],"import React, { View } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport managerIcon from \"../../assets/managar2.png\";\r\nimport playerIcon from \"../../assets/player.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"../layouts/css/Landing.css\";\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <div>\r\n      <Typography variant=\"h2\" style={{ textAlign: \"center\" }}>\r\n        Welcome to LCE\r\n      </Typography>\r\n    </div>\r\n\r\n    <div className=\"flex-container-main\">\r\n      <Link className=\"left-side\" to=\"/loginAdmin\">\r\n        <img\r\n          alt=\"mangerIcon\"\r\n          src={managerIcon}\r\n          width=\"350px\"\r\n          height=\"400px\"\r\n          className=\"avatar\"\r\n        />\r\n      </Link>\r\n      <Link className=\"right-side\" to=\"/loginUser\">\r\n        {/* <Typography className='right-side' variant='h5'>\r\n          User\r\n        </Typography> */}\r\n        <img alt=\"playerIcon\" src={playerIcon} width=\"350px\" height=\"400px\" />\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\ControlPanel.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js",["165","166"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Phase from \"./Phase\";\r\nimport \"../layouts/css/Game.css\";\r\nimport scoreLogo from \"../../assets/bottomBar/score.svg\";\r\nimport playerNumLogo from \"../../assets/bottomBar/playerNum.svg\";\r\nimport groupLogo from \"../../assets/bottomBar/group.svg\";\r\n\r\n// import { Question } from \"./Question\";\r\n// document.body.style.backgroundColor = \"#2d4059\";\r\n\r\nconst Game = ({ score, name, group }) => {\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Phase/>\r\n      </div>\r\n\r\n      <div className=\"bottomBar\">\r\n        <h1 className=\"text\">{group}</h1>\r\n        <img className=\"group\" src={groupLogo} />\r\n        <h1 className=\"text\">{name}</h1>\r\n        <img className=\"icon\" src={playerNumLogo} />\r\n        <h1 className=\"text\">{score}</h1>\r\n        <img className=\"icon\" src={scoreLogo} alt=\"scoreLogo\" />\r\n      </div>\r\n\r\n    </Fragment>\r\n    \r\n  );\r\n};\r\nGame.propTypes = {\r\n  score: PropTypes.number,\r\n  name: PropTypes.number,\r\n  group: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  score: state.user.userState.score,\r\n  name: state.user.name,\r\n  group: state.user.group,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Game);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\GameDashboard.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js",["167"],"import {\r\n  KEYGAME_SUCCESS,\r\n  KEYGAME_FAIL,\r\n  PHASE,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n} from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Start Game Admin\r\nexport const startGame = () => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: CREATE_NEW_GAME_INSTANCE,\r\n        })\r\n      );\r\n    };\r\n    // get The Game Properties\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const ChangePhase = (phaseName = \"\") => async (dispatch) => {\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: PHASE, //TODO::need to write func in server.\r\n        phaseName: phaseName,\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n\r\nexport const resumePause = (resumeOrPause) => async (dispatch) => {\r\n  console.log(resumeOrPause);\r\n  try {\r\n    client.send(\r\n      JSON.stringify({\r\n        type: resumeOrPause, //TODO::need to write func in server.\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL, //TODO:: change to more reasonable Error\r\n    });\r\n  }\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Phase.js",["168","169","170"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js",["171","172"],"import { KEYGAME_SUCCESS, KEYGAME_FAIL, CHANGE_SCREEN } from './types';\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\r\nimport { PATH, ServerPORT } from '../utils/ClientUtils';\r\nvar client;\r\n//Login User\r\nexport const login = ({ name, keygame }) => async (dispatch) => {\r\n\ttry {\r\n\t\tclient = new W3CWebSocket(PATH + ':' + ServerPORT);\r\n\r\n\t\tclient.onopen = () => {\r\n\t\t\tclient.send(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\ttype: 'REQ_USER_LOGIN',\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tkeygame: keygame,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t};\r\n\t\tclient.onmessage = (message) => {\r\n\t\t\tconst dataFromServer = JSON.parse(message.data);\r\n\t\t\tconst type = dataFromServer.type;\r\n\t\t\tconsole.log('got reply! ', dataFromServer);\r\n\t\t\tif (dataFromServer) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tpayload: dataFromServer,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t} catch (err) {\r\n\t\t// const errors = err.response.data.errors;\r\n\t\t// if (errors) {\r\n\t\t//   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n\t\t// }\r\n\t\tconsole.log(err.message);\r\n\t\tdispatch({\r\n\t\t\ttype: KEYGAME_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//TODO MIGHT NEED =>async dispatch\r\nexport const UserAnswer = (answerNum, time, key) => async () => {\r\n\tconsole.log('ua ' + answerNum + ' t ' + time);\r\n\tclient.send(\r\n\t\tJSON.stringify({\r\n\t\t\ttype: 'USER_ANSWER',\r\n\t\t\tanswer: answerNum,\r\n\t\t\ttime: time,\r\n\t\t\tkey: key,\r\n\t\t})\r\n\t);\r\n};\r\n\r\nexport const videoEnd = () => async () => {\r\n\tclient.send(\r\n\t\tJSON.stringify({\r\n\t\t\ttype: 'VIDEO_END',\r\n\t\t})\r\n\t);\r\n};\r\n\r\nexport const sendPicture = (imgSrc) => async () => {\r\n\tclient.send(\r\n\t\tJSON.stringify({\r\n\t\t\ttype: 'IMG',\r\n\t\t\timg: imgSrc,\r\n\t\t})\r\n\t);\r\n};\r\n\r\nexport const CameraNotAllowed = () => async () => {\r\n  console.log(\"Falah is wrong\");\r\n  client.send(\r\n    JSON.stringify({\r\n      type: \"CAMERA_NOT_ALLOWED\",\r\n    })\r\n  );\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\PlayersTable.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js",["173"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Player from \"@vimeo/player\";\r\nimport Vimeo from \"@u-wave/react-vimeo\";\r\nimport useWindowDimensions from \"./windeoResize\";\r\nimport { videoEnd } from \"../../actions/user\";\r\nimport \"../layouts/css/Video.css\";\r\n\r\nconst Video = ({ videoUrl, videoEnd }) => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const onVideoEnd = () => videoEnd();\r\n\r\n  return (\r\n    <div className=\"video\">\r\n      <Vimeo\r\n        video={videoUrl}\r\n        controls={false}\r\n        height={height - 80}\r\n        width={width}\r\n        autoplay\r\n        onEnd={onVideoEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nVideo.prototype = {\r\n  videoUrl: PropTypes.string,\r\n  videoEnd: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  videoUrl: state.user.userState.phaseProp.videoUrl,\r\n});\r\nexport default connect(mapStateToProps, { videoEnd })(Video);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Groups.js",["174","175"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Bars.js",["176","177","178","179","180","181"],"import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport correctSvg from \"../../assets/success-green-check-mark.svg\";\r\nimport incorrectSvg from \"../../assets/wrong.svg\";\r\nimport \"chartjs-plugin-datalabels\";\r\nimport \"chartjs-plugin-labels\";\r\nimport \"../layouts/css/BarsAnimation.css\";\r\n// import  aud from \"../../assets/beep.mp3\"\r\nconst Bars = ({\r\n  distribution,\r\n  correctAnswer,\r\n  answers,\r\n  userAnswer,\r\n  audioUrl,\r\n}) => {\r\n  let sentence;\r\n  // let icon;\r\n  if (correctAnswer == userAnswer) {\r\n    sentence = \"Well Done! Your answer is correct! \";\r\n    // icon = CorrectnessIcon(true);\r\n  } else {\r\n    sentence = \"Unfortunately, Your answer is not the right answer.. \";\r\n    // icon = CorrectnessIcon(false);\r\n  }\r\n  let distributionPercent = castToPercent(distribution);\r\n  let imagesByResult = imagesSetter(answers, correctAnswer, userAnswer);\r\n  let colorSet = [\r\n    \"#0ead69\",\r\n    \"#fdbd27\",\r\n    \"#ea3546\",\r\n    \"#2599e7\",\r\n    \"#d4d5fd\",\r\n    \"#f86624\",\r\n  ];\r\n  const data = {\r\n    labels: answers,\r\n    datasets: [\r\n      {\r\n        backgroundColor: colorSet,\r\n        borderColor: colorSet,\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: Object.values(distributionPercent),\r\n        datalabels: {\r\n          anchor: \"end\",\r\n          align: \"start\",\r\n          offset: 20,\r\n          backgroundColor: function (ctx) {\r\n            // var value = ctx.dataset.data[ctx.dataIndex];\r\n            // return value > 50 ? \"white\" : null;\r\n            return null;\r\n          },\r\n          borderColor: function (ctx) {\r\n            // var value = ctx.dataset.data[ctx.dataIndex];\r\n            // return value > 0 ? \"white\" : null;\r\n            // return \"white\";\r\n            return null;\r\n          },\r\n          // borderWidth: 2,\r\n          // borderRadius: 4,\r\n          font: {\r\n            weight: \"bold\",\r\n            size: 40,\r\n          },\r\n          color: function (ctx) {\r\n            var value = ctx.dataset.data[ctx.dataIndex];\r\n            return value > 0 ? \"white\" : null;\r\n            // return \"white\";\r\n          },\r\n          formatter: function (value, ctx) {\r\n            console.log(\"user answer is \" + userAnswer);\r\n            if (!ctx.active) {\r\n              return value + \"%\";\r\n            } else if (ctx.dataIndex == correctAnswer - 1) {\r\n              return \"Correct\";\r\n            } else if (ctx.dataIndex == userAnswer - 1) {\r\n              return \"Yours\";\r\n            } else {\r\n              return value + \"%\";\r\n            }\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className='flex-container'>\r\n      <Typography variant='h5' font='Montserrat'>\r\n        {sentence}\r\n        {/* {icon} */}\r\n      </Typography>\r\n      <audio autoPlay>\r\n        <source\r\n          src={\r\n            \"https://www.dropbox.com/s/rkly14ns3hnpq3i/zapsplat_animals_birds_spotted_dove_call_australia_56396.mp3?raw=1\"\r\n          }\r\n        />\r\n      </audio>\r\n      <div className='bottom-bars'>\r\n        <Bar\r\n          data={data}\r\n          options={{\r\n            layout: {\r\n              padding: {\r\n                top: 40,\r\n              },\r\n              margin: {\r\n                bottom: 20,\r\n              },\r\n            },\r\n            animation: {\r\n              duration: 2300,\r\n            },\r\n            legend: {\r\n              display: false,\r\n            },\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              labels: {\r\n                render: \"image\",\r\n                textMargin: 10,\r\n                images: imagesByResult,\r\n              },\r\n              datalabels: {\r\n                labels: {\r\n                  color: \"blue\",\r\n                  labels: {\r\n                    title: {\r\n                      font: {\r\n                        weight: \"bold\",\r\n                        size: 100,\r\n                      },\r\n                    },\r\n                    value: {\r\n                      color: \"green\",\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  display: true,\r\n                  ticks: {\r\n                    fontSize: 30,\r\n                  },\r\n                  gridLines: {\r\n                    paddingTop: 10,\r\n                    drawBorder: true,\r\n                    color: \"black\",\r\n                    drawOnChartArea: false,\r\n                    drawTicks: false,\r\n                  },\r\n                },\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  ticks: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction CorrectnessIcon(result) {\r\n  if (result) {\r\n    return <img width={30} height={30} src={correctSvg} />;\r\n  } else {\r\n    return <img width={30} height={30} src={incorrectSvg} />;\r\n  }\r\n}\r\nfunction imagesSetter(answers, correctAnswer, userAnswer) {\r\n  let imagesByResult = [];\r\n  for (let index = 0; index < answers.length; index++) {\r\n    if (index + 1 === userAnswer || index + 1 === correctAnswer) {\r\n      if (userAnswer === index + 1) {\r\n        imagesByResult[index] = {\r\n          //Wrong Answer\r\n          src: incorrectSvg,\r\n          width: 30,\r\n          height: 30,\r\n        };\r\n      }\r\n      if (correctAnswer === index + 1) {\r\n        imagesByResult[index] = {\r\n          //Correct Answer\r\n          src: correctSvg,\r\n          width: 30,\r\n          height: 30,\r\n        };\r\n      }\r\n    } else {\r\n      imagesByResult[index] = null;\r\n    }\r\n  }\r\n  return imagesByResult;\r\n}\r\nBars.propTypes = {\r\n  distribution: PropTypes.object.isRequired,\r\n  correctAnswer: PropTypes.number.isRequired,\r\n  userAnswer: PropTypes.number.isRequired,\r\n  answers: PropTypes.array.isRequired,\r\n  audioUrl: PropTypes.string.isRequired,\r\n};\r\nfunction castToPercent(distribution) {\r\n  let total = 0;\r\n  Object.values(distribution).forEach((element) => {\r\n    total += element;\r\n  });\r\n\r\n  let distributionPercent = {};\r\n  Object.keys(distribution).forEach((element) => {\r\n    distributionPercent[element] = Math.round(\r\n      (100 * distribution[element]) / total\r\n    );\r\n  });\r\n  return distributionPercent;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  distribution: state.user.userState.phaseProp.distribution,\r\n  correctAnswer: state.user.userState.phaseProp.correctAnswer,\r\n  userAnswer: state.user.userState.phaseProp.userAnswer,\r\n  answers: state.user.userState.phaseProp.answers,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Bars);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js",["182","183"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport StarShape from \"../../assets/winner_Shape.svg\";\r\nimport IconPerson from \"../../assets/person.jpg\";\r\nimport Applause from '../../assets/Applause.mp3';\r\nimport Crown from \"../../assets/crown.svg\";\r\nimport SpotlightCheck from \"./SpotlightCheck\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\n\r\nimport \"../layouts/css/Top3.css\";\r\n\r\n\r\nclass Top3 extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      place: 4,\r\n      third: false,\r\n      second: false,\r\n      first: false,\r\n      winner: false,\r\n      audio3: \"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\",\r\n      audio2: \"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\",\r\n      audio1: \"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\",\r\n    };\r\n  }  \r\n\r\n  componentDidMount() {\r\n   this.start();\r\n  }\r\n\r\n  start() {\r\n    this.setStatePromise({third: false})\r\n      .then(() => this.sleep(2000))\r\n      .then(() => this.setStatePromise({third: true, place: 3}))\r\n      .then(() => this.sleep(4500)) \r\n      .then(() => this.setStatePromise({third: false, second: true, place: 2}))\r\n      .then(() => this.sleep(4000))\r\n      .then(() => this.setStatePromise({ second: false, first: true, place: 1}))\r\n      .then(() => this.sleep(2100))\r\n      .then(() => this.setStatePromise({ first: true, winner: true}))\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  setStatePromise(state) {\r\n    this.setState(state);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  userExists = (place) => {\r\n    if(this.props.users.length<place)\r\n      return false;\r\n    return true;\r\n  }\r\n  \r\n  userName = (place) => {\r\n    if(this.props.users.length<place)\r\n      return \".\";\r\n    return this.props.users[place-1].userNumber;\r\n  };\r\n\r\n  userScore = (place) => {\r\n    if(this.props.users.length<place)\r\n      return \".\";\r\n    return this.props.users[place-1].curr_score;\r\n  };\r\n\r\n  userPic = (place) => {\r\n    if(this.props.users.length<place || this.state.place>place) \r\n      return IconPerson;\r\n    return this.props.users[place-1].img;\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <Fragment> \r\n        <div>\r\n          <SpotlightCheck /> \r\n          {this.state.third && (<audio autoPlay><source src={this.state.audio3}/></audio>)}\r\n          {this.state.second && (<audio autoPlay><source src={this.state.audio2}/></audio>)}\r\n          {this.state.first && (<audio autoPlay><source src={this.state.audio1}/></audio>)}\r\n          {this.state.winner && (<audio autoPlay><source type=\"audio/mp3\" src={Applause} /></audio>)}\r\n\r\n        </div>\r\n        {/* Users */}\r\n        <div className=\"flex-container-main\">\r\n            {/* Third (3) Place */}\r\n            <div className=\"flex-container-col playr-third\">\r\n              <div className=\"empty-rec\"/>\r\n              <div className=\"item-not-flex\">\r\n                <div class=\"ellipse\">{this.state.place<=3? this.userName(3): \"#\"}</div>\r\n                <ReactRoundedImage image={this.userPic(3)} roundedSize=\"0\" imageWidth=\"140\" imageHeight=\"140\" />\r\n              </div>\r\n\r\n              <div className=\"score-text inline-block\">{this.state.place<=3? this.userScore(3): \"#\"}</div> \r\n              <img alt=\"icon place 3\" src={StarShape} width=\"130px\"/>\r\n            </div> \r\n\r\n            {/* First (1) Place */}\r\n            <div className=\"flex-container-col playr-first\">\r\n              <div className=\"empty-rec1\"/>\r\n              <img alt=\"playerIcon\" src={Crown} width=\"90px\" style={{transform: \"rotate(10deg)\"}}/>\r\n              <div className=\"item-not-flex\">\r\n                <div class=\"ellipse\">{this.state.place<=1? this.userName(1): \"#\"}</div>\r\n                <ReactRoundedImage image={this.userPic(1)} roundedSize=\"0\" imageWidth=\"140\" imageHeight=\"140\" />\r\n\r\n              </div>\r\n              <div className=\"score-text\">{this.state.place<=1? this.userScore(1): \"#\"}</div> \r\n              <img alt=\"icon place 1\" src={StarShape} width=\"180px\"/>     \r\n              <div className=\"empty-rec\"/>\r\n            </div> \r\n\r\n            {/* Second Place */}\r\n            <div className=\"flex-container-col playr-second\">\r\n              <div className=\"empty-rec\"/>\r\n              <div className=\"item-not-flex\">\r\n                <div class=\"ellipse\">{this.state.place<=2? this.userName(2): \"#\"}</div>\r\n                <ReactRoundedImage image={this.userPic(2)} roundedSize=\"0\" imageWidth=\"140\" imageHeight=\"140\" />\r\n              </div>\r\n              <div className=\"score-text\">{this.state.place<=2? this.userScore(2): \"#\"}</div> \r\n              <img alt=\"icon place 2\" src={StarShape} width=\"130px\"/>\r\n            </div> \r\n        </div>\r\n      </Fragment>\r\n    )\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.user.userState.phaseProp.users,\r\n  audio: state.user.userState.phaseProp.audio,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Top3);","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\WebcamCapture.js",["184","185","186"],"import Webcam from \"react-webcam\";\r\nimport { sendPicture, CameraNotAllowed } from \"../../actions/user\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\nimport ScreenshotAudio from \"../../assets/Screenshot.mp3\";\r\nimport \"../layouts/css/WebcamCapture.css\";\r\n\r\nclass WebcamCapture extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      webcamRef: null,\r\n      ShowText: false,\r\n      Seconds: 1,\r\n      ImgExist: false,\r\n      CaptureImage: null,\r\n\t  audio: false,\r\n    disabledPictue: true,\r\n    notAllowed: false,\r\n    };\r\n\tthis.start = this.start.bind(this);\r\n  this.allow = this.allow.bind(this);\r\n  }\r\n\r\n  start() {\r\n    this.setStatePromise({\r\n      ImgExist: false,\r\n      ShowText: true,\t\r\n      Seconds: 3,\r\n      audio: false,\r\n    })\r\n      .then(() => this.sleep(1100))\r\n      .then(() => this.setStatePromise({ Seconds: 2 }))\r\n      .then(() => this.sleep(1000))\r\n      .then(() => this.setStatePromise({ Seconds: 1 }))\r\n      .then(() => this.sleep(1000))\r\n      .then(() => this.setStatePromise({ ShowText: false, audio: true }))\r\n      .then(() => this.sleep(500))\r\n      .then(() =>\r\n        this.setStatePromise({\r\n          ImgExist: true,\r\n          CaptureImage: this.webcamRef.getScreenshot(),\r\n        })\r\n      );\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  setStatePromise(state) {\r\n    this.setState(state);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  setRef = (webcam) => {\r\n\tthis.webcamRef = webcam;\r\n  };\r\n\r\n  allow(){\r\n    if (this.state.disabledPictue){\r\n      this.setStatePromise(({disabledPictue: false}))\r\n    }\r\n  };\r\n\r\n  render() {    \r\n    \r\n    function updateAllow(state) {\r\n      if(state === 'denied'){\r\n        document.getElementById('passPage').click();\r\n      }\r\n    }\r\n    \r\n    navigator.permissions.query({ name: 'camera' }).then((result) => {\r\n      updateAllow(result.state);\r\n      result.addEventListener('change', () => {\r\n        updateAllow(result.state);\r\n      });\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {this.state.audio && (\r\n          <audio autoPlay>\r\n            <source type=\"audio/mp3\" src={ScreenshotAudio} />\r\n          </audio>\r\n        )}\r\n        {!this.state.ImgExist && <div className=\"mark\" />}\r\n        <div className=\"flex-container-webcam-main\">\r\n          <div className=\"flex-container-webcam-col\">\r\n            <Typography variant=\"h2\">צילום תמונת משתתף</Typography>\r\n            <Typography variant=\"h9\" style={{ marginTop: 5 }}>\r\n              אנא נסו למקם את הפנים במרכז האזור המסומן בעיגול\r\n            </Typography>\r\n            {/* </div> */}\r\n            <div className=\"item\">\r\n              {this.state.ImgExist ? (\r\n                <ReactRoundedImage\r\n                  className=\"img\"\r\n                  image={this.state.CaptureImage}\r\n                  roundedSize=\"1\"\r\n                  imageWidth=\"350\"\r\n                  imageHeight=\"350\"\r\n                />\r\n              ) : (\r\n                <div>\r\n                  {/* <div className=\"mark\" /> */}\r\n                  <Webcam\r\n                    ref={this.setRef}\r\n                    audio={false}\r\n                    height=\"350\"\r\n                    onUserMedia={this.allow}\r\n                    screenshotFormat=\"image/jpeg\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"item\">\r\n              {!this.state.disabledPictue &&\r\n\t\t\t  <button\r\n                className=\"myButton\"\r\n                // disabled={this.state.ShowText}\r\n                onClick={this.start}\r\n                disabled={this.state.disabledPictue}\r\n              >\r\n            \t{this.state.ImgExist ? \"צלמ/י שוב\" : \"צלמ/י תמונה\"}\r\n              </button>}\r\n              {this.state.ImgExist && (\r\n                <button\r\n                  className=\"myButton\"\r\n\t\t\t\t  onClick={sendPicture(this.state.CaptureImage)}\r\n                >\r\n                  אשר/י תמונה\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.ShowText && (\r\n          <div className=\"counter-text\">{this.state.Seconds}</div>\r\n        )}\r\n      <button id=\"passPage\" style={{visibility: \"hidden\"}} onClick={CameraNotAllowed()}></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nWebcamCapture.propTypes = {\r\n  sendPicture: PropTypes.func.isRequired,\r\n  CameraNotAllowed: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, { sendPicture, CameraNotAllowed })(WebcamCapture);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js",["187"],"import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { UserAnswer } from '../../actions/user';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nimport { Textfit } from 'react-textfit';\r\nimport '../layouts/css/Questions.css';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n// Didnt finished Timing !!! not heard is correct\r\nclass Question extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tpart: 'listening',\r\n\t\t\tcalledTime: new Date(),\r\n\t\t\taudioDuration: 0,\r\n\t\t\tselected: -1, // start from 0 . for present the currect answer\r\n\t\t\tkey: 0,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst self = this;\r\n\t\tif (this.state.part === 'listening') {\r\n\t\t\tvar audioElement = document.getElementById('myAudio');\r\n\t\t\tif (audioElement != null) {\r\n\t\t\t\taudioElement.addEventListener(\r\n\t\t\t\t\t'ended',\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\tpart: 'animation',\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\taudioElement.addEventListener('loadedmetadata', (e) => {\r\n\t\t\t\tself.state.audioDuration = e.target.duration;\r\n\t\t\t});\r\n\t\t}\r\n\t\twindow.addEventListener('focus', () => {\r\n\t\t\tif (self.state.part === 'animation') {\r\n\t\t\t\tself.setState({ key: self.state.key + 1 });\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tvar part = this.state.part;\r\n\t\tvar questDiv;\r\n\t\tvar allQuestDivs = [];\r\n\t\tvar classNames = [];\r\n\t\tconst indexes = [];\r\n\t\tvar clocktimer;\r\n\t\tlet tmp = 0;\r\n\t\tconst audioPathQuestion =\r\n\t\t\t'assets/question/' + this.props.quesNum + '_1.m4a';\r\n\t\tfor (let index = 0; index < this.props.answers.length; index++) {\r\n\t\t\ttmp = index + 1;\r\n\t\t\tindexes[index] = tmp + '';\r\n\t\t}\r\n\t\tif (part === 'animation') {\r\n\t\t\tclassNames = [\r\n\t\t\t\t'hovering singleAnswer s1',\r\n\t\t\t\t'hovering singleAnswer s2',\r\n\t\t\t\t'hovering singleAnswer s3',\r\n\t\t\t\t'hovering singleAnswer s4',\r\n\t\t\t];\r\n\t\t\tfor (\r\n\t\t\t\tlet index = 0;\r\n\t\t\t\tindex < this.props.answers.length;\r\n\t\t\t\tindex = index + 1\r\n\t\t\t) {\r\n\t\t\t\tquestDiv = (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => onAnswerClick(index + 1)}\r\n\t\t\t\t\t\t\tclassName={classNames[index]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={'numberCircle'}>{index + 1}</div>\r\n\t\t\t\t\t\t\t<Textfit max={40} min={26} mode='multi'>\r\n\t\t\t\t\t\t\t\t{this.props.answers[index]}\r\n\t\t\t\t\t\t\t</Textfit>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t\tallQuestDivs.push(questDiv);\r\n\t\t\t}\r\n\t\t\tvar remainTime =\r\n\t\t\t\tthis.state.calledTime.getTime() +\r\n\t\t\t\tthis.state.audioDuration * 1000 +\r\n\t\t\t\tthis.props.time * 1000 -\r\n\t\t\t\tnew Date().getTime();\r\n\t\t\tif (remainTime < 500) {\r\n\t\t\t\tthis.setState({ part: 'answered' });\r\n\t\t\t\tremainTime = 0;\r\n\t\t\t}\r\n\t\t\tclocktimer = (\r\n\t\t\t\t<div className='clockCenter'>\r\n\t\t\t\t\t<CountdownCircleTimer\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: '30px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={this.state.key}\r\n\t\t\t\t\t\tinitialRemainingTime={remainTime / 1000}\r\n\t\t\t\t\t\tisPlaying={true}\r\n\t\t\t\t\t\tsize={120}\r\n\t\t\t\t\t\t// duration={() => getRemainTime()}\r\n\t\t\t\t\t\tduration={this.props.time}\r\n\t\t\t\t\t\tcolors={[\r\n\t\t\t\t\t\t\t['#004777', 0.33],\r\n\t\t\t\t\t\t\t['#F7B801', 0.33],\r\n\t\t\t\t\t\t\t['#A30000', 0.33],\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t// onComplete={() => {\r\n\t\t\t\t\t\t//   this.setState({ part: \"answered\" });\r\n\t\t\t\t\t\t// }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ remainingTime }) => remainingTime}\r\n\t\t\t\t\t</CountdownCircleTimer>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (part === 'answered') {\r\n\t\t\t/*\r\n      build the part of waiting for moving to next phase.\r\n    */\r\n\t\t\tclassNames = [\r\n\t\t\t\t'singleAnswer e1',\r\n\t\t\t\t'singleAnswer e2',\r\n\t\t\t\t'singleAnswer e3',\r\n\t\t\t\t'singleAnswer e4',\r\n\t\t\t];\r\n\t\t\tif (this.state.selected >= 0) {\r\n\t\t\t\tclassNames[this.state.selected] =\r\n\t\t\t\t\t'singleAnswer s' + (this.state.selected + 1);\r\n\t\t\t}\r\n\t\t\tfor (\r\n\t\t\t\tlet index = 0;\r\n\t\t\t\tindex < this.props.answers.length;\r\n\t\t\t\tindex = index + 1\r\n\t\t\t) {\r\n\t\t\t\tquestDiv = (\r\n\t\t\t\t\t<button disabled={true} className={classNames[index]}>\r\n\t\t\t\t\t\t<Textfit max={40} min={26} mode='multi'>\r\n\t\t\t\t\t\t\t{this.props.answers[index]}\r\n\t\t\t\t\t\t</Textfit>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t);\r\n\t\t\t\tallQuestDivs.push(questDiv);\r\n\t\t\t}\r\n\t\t\tvar remainTime =\r\n\t\t\t\tthis.state.calledTime.getTime() +\r\n\t\t\t\tthis.state.audioDuration * 1000 +\r\n\t\t\t\tthis.props.time * 1000 -\r\n\t\t\t\tnew Date().getTime();\r\n\t\t\tif (remainTime < 500) {\r\n\t\t\t\tremainTime = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst renderTime = ({ remainingTime }) => {\r\n\t\t\t\tif (remainingTime === 0) {\r\n\t\t\t\t\treturn <div dir='ltr'>!הזמן אזל</div>;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn <div>{remainingTime}</div>;\r\n\t\t\t};\r\n\r\n\t\t\tclocktimer = (\r\n\t\t\t\t<div className='clockCenter'>\r\n\t\t\t\t\t<CountdownCircleTimer\r\n\t\t\t\t\t\tsize={120}\r\n\t\t\t\t\t\tisPlaying\r\n\t\t\t\t\t\tduration={this.props.time} // should be Time Left !\r\n\t\t\t\t\t\tinitialRemainingTime={remainTime / 1000}\r\n\t\t\t\t\t\tcolors={[\r\n\t\t\t\t\t\t\t['#004777', 0.33],\r\n\t\t\t\t\t\t\t['#F7B801', 0.33],\r\n\t\t\t\t\t\t\t['#A30000', 0.33],\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{renderTime}\r\n\t\t\t\t\t</CountdownCircleTimer>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t/*\r\n    Func Declarations :\r\n    */\r\n\t\tconst onAnswerClick = (ind) => {\r\n\t\t\tconst DeltaTime =\r\n\t\t\t\tthis.state.calledTime.getTime() +\r\n\t\t\t\tthis.state.audioDuration * 1000 +\r\n\t\t\t\tthis.props.time * 1000 -\r\n\t\t\t\tnew Date().getTime();\r\n\t\t\tconsole.log('time is ' + DeltaTime);\r\n\t\t\tthis.setState({ part: 'answered', selected: ind - 1 });\r\n\t\t\tthis.props.UserAnswer(ind, Math.round(DeltaTime), this.props.quesNum);\r\n\t\t};\r\n\r\n\t\tconst handleKeyDown = (key) => {\r\n\t\t\tconst DeltaTime =\r\n\t\t\t\tthis.state.calledTime.getTime() +\r\n\t\t\t\tthis.state.audioDuration * 1000 +\r\n\t\t\t\tthis.props.time * 1000 -\r\n\t\t\t\tnew Date().getTime();\r\n\t\t\tconsole.log('time is ' + DeltaTime);\r\n\t\t\tthis.setState({\r\n\t\t\t\tpart: 'answered',\r\n\t\t\t\tselected: parseInt(key) - 1,\r\n\t\t\t});\r\n\t\t\tthis.props.UserAnswer(\r\n\t\t\t\tparseInt(key),\r\n\t\t\t\tMath.round(DeltaTime),\r\n\t\t\t\tthis.props.quesNum\r\n\t\t\t);\r\n\t\t};\r\n\t\t/*\r\n    Components Declareations :\r\n    */\r\n\r\n\t\tconst listeningQuestion = (\r\n\t\t\t<div className='wholescreen'>\r\n\t\t\t\t<div className='flex-container'>\r\n\t\t\t\t\t<div dir='rtl' className='question'>\r\n\t\t\t\t\t\t{this.props.question}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<audio id='myAudio' autoPlay>\r\n\t\t\t\t\t\t<source src={audioPathQuestion} />\r\n\t\t\t\t\t</audio>\r\n\t\t\t\t\t<div style={{ marginTop: '20px' }}>\r\n\t\t\t\t\t\t<ScaleLoader />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst animation = (\r\n\t\t\t<div className='wholescreen-col'>\r\n\t\t\t\t<div className='quest-and-watch'>\r\n\t\t\t\t\t<div>{clocktimer}</div>\r\n\t\t\t\t\t<div className='questAnimation'>{this.props.question}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='quest-container'>{allQuestDivs}</div>\r\n\t\t\t\t<KeyboardEventHandler\r\n\t\t\t\t\thandleKeys={indexes}\r\n\t\t\t\t\tonKeyEvent={(key, e) => handleKeyDown(key)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst answeredAndWait = (\r\n\t\t\t<div className='wholescreen-col'>\r\n\t\t\t\t<div style={{ position: 'absolute', top: '20px', fontSize: '36px' }}>\r\n\t\t\t\t\t{this.props.question}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='quest-container-answered'>{allQuestDivs}</div>\r\n\t\t\t\t<div className='waitUsers'>wait for your last friends...</div>\r\n\t\t\t\t<div className='clockAnimation'>{clocktimer}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst timeOut = <div>TIMEOUT !!!</div>;\r\n\t\tif (part === 'listening') {\r\n\t\t\treturn listeningQuestion;\r\n\t\t} else if (part === 'animation') {\r\n\t\t\treturn animation;\r\n\t\t} else if (part === 'answered') {\r\n\t\t\treturn answeredAndWait;\r\n\t\t} else if (part === 'timeout') {\r\n\t\t\treturn timeOut;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nQuestion.propTypes = {\r\n\tquestion: PropTypes.string.isRequired,\r\n\tanswers: PropTypes.array,\r\n\ttime: PropTypes.number,\r\n\tUserAnswer: PropTypes.func.isRequired,\r\n\tquesNum: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tquestion: state.user.userState.phaseProp.question,\r\n\tanswers: state.user.userState.phaseProp.answers,\r\n\ttime: state.user.userState.phaseProp.time,\r\n\tquesNum: state.user.userState.phaseProp.key,\r\n});\r\n\r\nexport default connect(mapStateToProps, { UserAnswer })(Question);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js",["188"],"import {\r\n  CHANGE_SCREEN,\r\n  KEYGAME_FAIL,\r\n  GAME_KEY_SUCCESS,\r\n  SERVER_FEEDBACK_TO_ANSWER,\r\n  PHASE,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  name: \"\",\r\n  isAuthenticated: false,\r\n  userState: {},\r\n  // score: \"0\",\r\n  group: \"\",\r\n};\r\n//func name Changed from login to userReducer\r\nexport default function userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  console.log(payload);\r\n  switch (type) {\r\n    case GAME_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        name: payload.name,\r\n        group: payload.group,\r\n        isAuthenticated: true,\r\n        userState: payload,\r\n      };\r\n    case KEYGAME_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case PHASE:\r\n      return {\r\n        ...state,\r\n        userState: payload,\r\n        //TODO:: change the screen state to name of the screen and not bool\r\n      };\r\n    case \"IMG\":\r\n      return {\r\n        ...state,\r\n        userState: payload,\r\n      };\r\n    case SERVER_FEEDBACK_TO_ANSWER:\r\n      return {\r\n        score: payload.score,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\dashboard.js",["189","190"],"import {\r\n  START_GAME,\r\n  GAME_PROP,\r\n  CREATE_NEW_GAME_INSTANCE,\r\n  USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  phaseList: [],\r\n  Gamekey: \"000\",\r\n  usersData: {},\r\n};\r\n\r\nexport default function dashBoardReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_NEW_GAME_INSTANCE:\r\n      return {\r\n        ...state,\r\n        phaseList: payload.phaseList,\r\n        GameKey: payload.keyGame,\r\n      };\r\n    case USER:\r\n      return {\r\n        ...state,\r\n        usersData: payload.usersData,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\SpotlightCheck.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\windeoResize.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":18},{"ruleId":"195","severity":1,"message":"199","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":21},{"ruleId":"195","severity":1,"message":"200","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":12},{"ruleId":"195","severity":1,"message":"201","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":22,"column":9,"nodeType":"204","endLine":22,"endColumn":50},{"ruleId":"202","severity":1,"message":"203","line":24,"column":9,"nodeType":"204","endLine":24,"endColumn":53},{"ruleId":"195","severity":1,"message":"205","line":2,"column":3,"nodeType":"197","messageId":"198","endLine":2,"endColumn":18},{"ruleId":"195","severity":1,"message":"206","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"207","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":15},{"ruleId":"208","severity":1,"message":"209","line":35,"column":7,"nodeType":"210","messageId":"211","endLine":35,"endColumn":37},{"ruleId":"195","severity":1,"message":"205","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"212","line":1,"column":41,"nodeType":"197","messageId":"198","endLine":1,"endColumn":54},{"ruleId":"195","severity":1,"message":"213","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":60,"column":38,"nodeType":"216","messageId":"217","endLine":60,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":170,"column":19,"nodeType":"216","messageId":"217","endLine":170,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":21,"column":21,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":76,"column":38,"nodeType":"216","messageId":"217","endLine":76,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":78,"column":38,"nodeType":"216","messageId":"217","endLine":78,"endColumn":40},{"ruleId":"195","severity":1,"message":"218","line":177,"column":10,"nodeType":"197","messageId":"198","endLine":177,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":179,"column":12,"nodeType":"204","endLine":179,"endColumn":59},{"ruleId":"202","severity":1,"message":"203","line":181,"column":12,"nodeType":"204","endLine":181,"endColumn":61},{"ruleId":"195","severity":1,"message":"219","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":35},{"ruleId":"195","severity":1,"message":"220","line":1,"column":37,"nodeType":"197","messageId":"198","endLine":1,"endColumn":46},{"ruleId":"195","severity":1,"message":"221","line":4,"column":17,"nodeType":"197","messageId":"198","endLine":4,"endColumn":26},{"ruleId":"195","severity":1,"message":"219","line":4,"column":28,"nodeType":"197","messageId":"198","endLine":4,"endColumn":36},{"ruleId":"195","severity":1,"message":"220","line":4,"column":38,"nodeType":"197","messageId":"198","endLine":4,"endColumn":47},{"ruleId":"222","severity":1,"message":"223","line":153,"column":8,"nodeType":"197","messageId":"224","endLine":153,"endColumn":18},{"ruleId":"195","severity":1,"message":"212","line":2,"column":3,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"225","line":2,"column":3,"nodeType":"197","messageId":"198","endLine":2,"endColumn":13},{"ruleId":"195","severity":1,"message":"226","line":3,"column":3,"nodeType":"197","messageId":"198","endLine":3,"endColumn":12},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'httpPath' is defined but never used.","Identifier","unusedVar","'DialogTitle' is defined but never used.","'Game' is defined but never used.","'View' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'KEYGAME_SUCCESS' is defined but never used.","'Fragment' is defined but never used.","'login' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'CHANGE_SCREEN' is defined but never used.","'Player' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CorrectnessIcon' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","no-redeclare","'remainTime' is already defined.","redeclared","'START_GAME' is defined but never used.","'GAME_PROP' is defined but never used.","no-global-assign","no-unsafe-negation"]