[{"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js":"1","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js":"2","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js":"3","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js":"4","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js":"5","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js":"6","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\Dashboard.js":"7","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js":"8","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js":"9","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js":"10","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js":"11","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js":"12","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js":"13","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js":"14","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js":"15","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js":"16","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js":"17","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\WaitingRoom.js":"18","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js":"19","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js":"20","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js":"21","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js":"22","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js":"23","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js":"24","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js":"25","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js":"26","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js":"27","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js":"28"},{"size":207,"mtime":1608038562091,"results":"29","hashOfConfig":"30"},{"size":1625,"mtime":1608145598783,"results":"31","hashOfConfig":"30"},{"size":397,"mtime":1607981746162,"results":"32","hashOfConfig":"30"},{"size":2188,"mtime":1608116192746,"results":"33","hashOfConfig":"30"},{"size":251,"mtime":1607981746163,"results":"34","hashOfConfig":"30"},{"size":1920,"mtime":1608145598785,"results":"35","hashOfConfig":"30"},{"size":875,"mtime":1608116192753,"results":"36","hashOfConfig":"30"},{"size":2921,"mtime":1607981746146,"results":"37","hashOfConfig":"30"},{"size":1994,"mtime":1607981746145,"results":"38","hashOfConfig":"30"},{"size":506,"mtime":1607981746148,"results":"39","hashOfConfig":"30"},{"size":667,"mtime":1607981746149,"results":"40","hashOfConfig":"30"},{"size":637,"mtime":1608038753886,"results":"41","hashOfConfig":"30"},{"size":891,"mtime":1608145598786,"results":"42","hashOfConfig":"30"},{"size":357,"mtime":1607981746133,"results":"43","hashOfConfig":"30"},{"size":531,"mtime":1608116192748,"results":"44","hashOfConfig":"30"},{"size":122,"mtime":1608146864798,"results":"45","hashOfConfig":"30"},{"size":1453,"mtime":1608121914951,"results":"46","hashOfConfig":"30"},{"size":898,"mtime":1608145598789,"results":"47","hashOfConfig":"30"},{"size":587,"mtime":1608116192747,"results":"48","hashOfConfig":"30"},{"size":90,"mtime":1608145598787,"results":"49","hashOfConfig":"30"},{"size":88,"mtime":1608145598785,"results":"50","hashOfConfig":"30"},{"size":86,"mtime":1608145598787,"results":"51","hashOfConfig":"30"},{"size":87,"mtime":1608145598788,"results":"52","hashOfConfig":"30"},{"size":86,"mtime":1608145598786,"results":"53","hashOfConfig":"30"},{"size":195,"mtime":1608038562092,"results":"54","hashOfConfig":"30"},{"size":397,"mtime":1607981746158,"results":"55","hashOfConfig":"30"},{"size":858,"mtime":1608145502418,"results":"56","hashOfConfig":"30"},{"size":1146,"mtime":1608116192758,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1k5eq83",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\index.js",[],["123","124"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\App.js",["125"],"import React, { Fragment, useEffect } from \"react\";\r\nimport LoginUser from \"./components/auth/LoginUser\";\r\nimport LoginAdmin from \"./components/auth/LoginAdmin\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Landing from \"./components/layouts/Landing\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Alert from \"./components/layouts/Alert\";\r\nimport Game from \"./components/game/Game\";\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadAdmin } from \"./actions/auth\";\r\nimport \"./App.css\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    //Empty [] only run once, else inifinty.\r\n    store.dispatch(loadAdmin());\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <section className=\"container\">\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path=\"/loginUser\" component={LoginUser} />\r\n              <Route exact path=\"/loginAdmin\" component={LoginAdmin} />\r\n              <Route exact path=\"/Register\" component={Register} />\r\n              <PrivateRoute exact path=\"/Dashboard\" component={Dashboard} />\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\nexport default App;\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\store.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\auth.js",["126"],"import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\nimport { httpPath } from \"../utils/ClientUtils\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  ADMIN_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\n//Load Admin\r\nexport const loadAdmin = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    console.log(\"1\");\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: ADMIN_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// actions/auth.js must have same name as reducers/auth.js\r\n//Register Admin\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/admin\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err;\r\n\r\n    if (errors) {\r\n      // errors.foreach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n//Login Admin\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadAdmin());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT Admin\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n//StartGame\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginUser.js",["127"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport WaitingRoom from \"../layouts/WaitingRoom\";\r\nimport Game from \"../game/Game\";\r\n\r\nconst LoginUser = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    keygame: \"\",\r\n  });\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"key game is \" + keygame);\r\n    login({ name, keygame });\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    console.log(\"user - isAuthenticated\");\r\n    return <Game />;\r\n  }\r\n\r\n  const { name, keygame } = formData;\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">User Interface</h1>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"formField\"\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"formField\"\r\n            type=\"number\"\r\n            placeholder=\"keygame\"\r\n            name=\"keygame\"\r\n            value={keygame}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"></input>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLoginUser.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginUser);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\Register.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\auth\\LoginAdmin.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\Landing.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Game.js",["128","129"],"import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport { Question } from \"./Question\";\r\nimport { Answer } from \"./Answer\";\r\nimport { Video } from \"./Video\";\r\nimport { Top3 } from \"./Top3\";\r\nimport { Poll } from \"./Poll\";\r\n\r\nconst Game = ({ screen }) => {\r\n  switch (screen) {\r\n    case \"question\":\r\n      return <Question />;\r\n    case \"answer\":\r\n      return <Answer />;\r\n    case \"video\":\r\n      return <Video />;\r\n    case \"poll\":\r\n      return <Poll />;\r\n    case \"top3\":\r\n      return <Top3 />;\r\n    default:\r\n      return <h1>Defult Screen</h1>;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nGame.propTypes = {\r\n  screen: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  screen: state.user.screen,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Game);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\types.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\utils\\ClientUtils.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\user.js",["130","131"],"import { KEYGAME_SUCCESS, KEYGAME_FAIL, CHANGE_SCREEN } from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Login User\r\nexport const login = ({ name, keygame }) => async (dispatch) => {\r\n  try {\r\n    console.log(\"Baraka\");\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n    console.log(\"Baraka2\");\r\n\r\n    client.onopen = () => {\r\n      console.log(\"WebSocket Client Connected\");\r\n      console.log(\"name is\" + name);\r\n      console.log(\"keygame is\" + keygame);\r\n      client.send(\r\n        JSON.stringify({\r\n          type: \"REQ_USER_LOGIN\",\r\n          name: name,\r\n          keygame: keygame,\r\n        })\r\n      );\r\n    };\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      const type = dataFromServer.type;\r\n      console.log(\"got reply! \", dataFromServer);\r\n      if (dataFromServer) {\r\n        dispatch({\r\n          type: type,\r\n          payload: dataFromServer,\r\n        });\r\n      }\r\n    };\r\n  } catch (err) {\r\n    // const errors = err.response.data.errors;\r\n    // if (errors) {\r\n    //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    // }\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// //LOGOUT Admin\r\n// export const logout = () => (dispatch) => {\r\n//   dispatch({\r\n//     type: LOGOUT,\r\n//   });\r\n// };\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\layouts\\WaitingRoom.js",["132"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/user\";\r\nimport Game from \"../game/Game\";\r\n\r\nconst WaitingRoom = ({ id, login, screen, isAuthenticated }) => {\r\n  if (screen) {\r\n    return <Game />;\r\n  }\r\n\r\n  //TODO:: add authetiract in this page, {PrivateRouth}\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Waiting Room</h1>\r\n      <h2>welocome {id} </h2>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nWaitingRoom.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  login: PropTypes.func.isRequired,\r\n  id: PropTypes.number,\r\n  screen: PropTypes.bool,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  id: state.user.id,\r\n  screen: state.user.screen,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(WaitingRoom);\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\actions\\dashboard.js",["133"],"import { KEYGAME_SUCCESS, KEYGAME_FAIL, CHANGE_SCREEN } from \"./types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { PATH, ServerPORT } from \"../utils/ClientUtils\";\r\nvar client;\r\n//Login User\r\nexport const startGame = () => async (dispatch) => {\r\n  try {\r\n    client = new W3CWebSocket(PATH + \":\" + ServerPORT);\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify({\r\n          type: CHANGE_SCREEN,\r\n        })\r\n      );\r\n    };\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch({\r\n      type: KEYGAME_FAIL,\r\n    });\r\n  }\r\n};\r\n","C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Question.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Answer.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Top3.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Video.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\components\\game\\Poll.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\index.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\alert.js",[],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\user.js",[],["134","135"],"C:\\Asaf\\2.Work\\React\\mernTest\\client\\src\\reducers\\auth.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":11,"column":8,"nodeType":"142","messageId":"143","endLine":11,"endColumn":12},{"ruleId":"140","severity":1,"message":"144","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":18},{"ruleId":"140","severity":1,"message":"145","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":19},{"ruleId":"140","severity":1,"message":"146","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"148","line":26,"column":3,"nodeType":"149","messageId":"150","endLine":26,"endColumn":22},{"ruleId":"140","severity":1,"message":"151","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"152","line":1,"column":41,"nodeType":"142","messageId":"143","endLine":1,"endColumn":54},{"ruleId":"140","severity":1,"message":"153","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":35},{"ruleId":"140","severity":1,"message":"151","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"136","replacedBy":"154"},{"ruleId":"138","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'Game' is defined but never used.","Identifier","unusedVar","'httpPath' is defined but never used.","'WaitingRoom' is defined but never used.","'Fragment' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'KEYGAME_SUCCESS' is defined but never used.","'CHANGE_SCREEN' is defined but never used.","'useState' is defined but never used.",["156"],["157"],"no-global-assign","no-unsafe-negation"]